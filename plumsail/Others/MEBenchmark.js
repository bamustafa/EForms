var _module, _formType, _web, _webUrl, _siteUrl, _layout, _itemId, _ImageUrl, _ListInternalName, _ProjectNumber, 
    _ListFullUrl, _CurrentUser, _fields = [];
let Inputelems = document.querySelectorAll('input[type="text"]');
let _Email, _Notification = '', _DipN = "", _htLibraryUrl, _errorImg, _submitImg;


//handson variables
let _hot, _container, _data= [], _colArray, batchSize = 15;
const blueColor = '#6ca9d5', greenColor = '#5FC9B3', yellowColor = '#F7D46D', redColor = '#F28B82';

//form type
let _isNew = false, _isEdit = false, _proceed = false;

const disableField = (field) => fd.field(field).disabled = true;
const enableField = (field) => fd.field(field).disabled = false;
const clearField = (field) => fd.field(field).value = '';
const showField = (field) => $(fd.field(field).$parent.$el).show();
const hideField = (field) => $(fd.field(field).$parent.$el).hide();

var onRender = async function (moduleName, formType){
    


   


    let fieldsToWatch = [
        'MG_1', 'MG_2', 'MG_4', 'MG_9', 'MG_10', 'MG_14','MG_6',
        'MG_11',
        'ED_1', 'ED_3', 'ED_5', 'ED_7', 
        'MCC_1', 'MCC_6', 
        'MDE_2', 'MDE_3', 
        'PA_1', 'PA_2', 'PA_4', 'PA_6', 'PA_10',
        'HVAC_2', 'HVAC_13', 'HVAC_29', 'HVAC_28', 'HVAC_31', 'HVAC_33',
        'Plumbing_2', 'Plumbing_3', 'Occupancy', 'Plumbing_8', 'Plumbing_13', 
        'Plumbing_18', 'Plumbing_25', 'Plumbing_27', 'Plumbing_24', 
        'Plumbing_32', 'Plumbing_33', 'Plumbing_35', 'Plumbing_1', 'FF_1'
    ];

    //  fieldsToWatch.forEach(field => {
    //     fd.field(field).$on('change', function(value){      
    //          calculateValues();        
    //           });
    //  });
    
    
    fieldsToWatch.forEach(field => {
        let fieldInstance = fd.field(field);
    
        if (fieldInstance) {
            let inputElement = $(fieldInstance.$el).find('.k-input');
            if (inputElement.length > 0) {
                inputElement.on('input', function () {
                    let newValue = $(this).val(); // Get value from input
                    console.log(`Typing detected in: ${field}, New Value: ${newValue}`);
                    
                    // Update the field value in Plumsail to ensure it registers the change
                    fd.field(field).value = newValue;  
                    
                    // Trigger the calculateValues function immediately
                    calculateValues();
                });
            }
        }
    });
    ;
    
    
    
    
    
     //GENERAL ICONS
   // const pmc18svg = `<svg fill="#49c4b1" width ="24" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M235.52 143.36h757.76c16.966 0 30.72 13.754 30.72 30.72s-13.754 30.72-30.72 30.72H235.52c-16.966 0-30.72-13.754-30.72-30.72s13.754-30.72 30.72-30.72zm0 225.28h757.76c16.966 0 30.72 13.754 30.72 30.72s-13.754 30.72-30.72 30.72H235.52c-16.966 0-30.72-13.754-30.72-30.72s13.754-30.72 30.72-30.72zm0 235.52h757.76c16.966 0 30.72 13.754 30.72 30.72s-13.754 30.72-30.72 30.72H235.52c-16.966 0-30.72-13.754-30.72-30.72s13.754-30.72 30.72-30.72zm0 225.28h757.76c16.966 0 30.72 13.754 30.72 30.72s-13.754 30.72-30.72 30.72H235.52c-16.966 0-30.72-13.754-30.72-30.72s13.754-30.72 30.72-30.72zM61.44 235.52C27.508 235.52 0 208.012 0 174.08s27.508-61.44 61.44-61.44 61.44 27.508 61.44 61.44-27.508 61.44-61.44 61.44zm0 225.28C27.508 460.8 0 433.292 0 399.36s27.508-61.44 61.44-61.44 61.44 27.508 61.44 61.44-27.508 61.44-61.44 61.44zm0 235.52C27.508 696.32 0 668.812 0 634.88s27.508-61.44 61.44-61.44 61.44 27.508 61.44 61.44-27.508 61.44-61.44 61.44zm0 225.28C27.508 921.6 0 894.092 0 860.16s27.508-61.44 61.44-61.44 61.44 27.508 61.44 61.44-27.508 61.44-61.44 61.44z"></path></g></svg>`;      
    //setIconSource("general-icon", pmc38svg);
    const pmc35svg = `<svg fill="#49c4b1" width="30" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M 12 6.59375 L 11.28125 7.28125 L 3.28125 15.28125 L 2.59375 16 L 3.28125 16.71875 L 11.28125 24.71875 L 12 25.40625 L 12.71875 24.71875 L 16.71875 20.71875 L 17.40625 20 L 16.71875 19.28125 L 11.71875 14.28125 L 10.28125 15.71875 L 14.5625 20 L 12 22.5625 L 5.4375 16 L 12 9.4375 L 13.28125 10.71875 L 14.71875 9.28125 L 12.71875 7.28125 Z M 20 6.59375 L 19.28125 7.28125 L 15.28125 11.28125 L 14.59375 12 L 15.28125 12.71875 L 20.28125 17.71875 L 21.71875 16.28125 L 17.4375 12 L 20 9.4375 L 26.5625 16 L 20 22.5625 L 18.71875 21.28125 L 17.28125 22.71875 L 19.28125 24.71875 L 20 25.40625 L 20.71875 24.71875 L 28.71875 16.71875 L 29.40625 16 L 28.71875 15.28125 L 20.71875 7.28125 Z"></path></g></svg>`;      
    setIconSource("g-icon", pmc35svg); 
    const pmc36svg = `<svg viewBox="0 0 32 32" width="24" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g fill="none" fill-rule="evenodd"> <path d="m0 0h32v32h-32z"></path> <path d="m16 17c.5522847 0 1 .4477153 1 1v10c0 .5522847-.4477153 1-1 1s-1-.4477153-1-1v-10c0-.5522847.4477153-1 1-1zm6 0c.5522847 0 1 .4477153 1 1 0 3.5960656 1.7367768 6.8992385 4.6073687 8.9529161.4491716.3213461.5527946.9459741.2314484 1.3951457-.3213461.4491716-.9459741.5527946-1.3951457.2314485-3.3900202-2.4252868-5.4436714-6.3311225-5.4436714-10.5795103 0-.5522847.4477153-1 1-1zm-12 0c.5522847 0 1 .4477153 1 1 0 4.2435001-2.04890255 8.1453882-5.43243138 10.5714599-.44883053.3218223-1.0735681.2188618-1.3953904-.2299687-.32182231-.4488306-.2188618-1.0735681.22996874-1.3953904 2.86509777-2.0543441 4.59785304-5.3541679 4.59785304-8.9461008 0-.5522847.44771525-1 1-1zm17-15c2.7614237 0 5 2.23857625 5 5v4c0 2.7614237-2.2385763 5-5 5h-22c-2.76142375 0-5-2.2385763-5-5v-4c0-2.76142375 2.23857625-5 5-5zm0 2h-22c-1.65685425 0-3 1.34314575-3 3v4c0 1.6568542 1.34314575 3 3 3h22c1.6568542 0 3-1.3431458 3-3v-4c0-1.65685425-1.3431458-3-3-3zm0 6c.5522847 0 1 .4477153 1 1s-.4477153 1-1 1h-22c-.55228475 0-1-.4477153-1-1s.44771525-1 1-1z" fill="#49c4b1" fill-rule="nonzero"></path> </g> </g></svg>`;      
    setIconSource("gen-icon", pmc35svg); 
    const pmc37svg = `<svg fill="#49c4b1" width="30" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M 12 6.59375 L 11.28125 7.28125 L 3.28125 15.28125 L 2.59375 16 L 3.28125 16.71875 L 11.28125 24.71875 L 12 25.40625 L 12.71875 24.71875 L 16.71875 20.71875 L 17.40625 20 L 16.71875 19.28125 L 11.71875 14.28125 L 10.28125 15.71875 L 14.5625 20 L 12 22.5625 L 5.4375 16 L 12 9.4375 L 13.28125 10.71875 L 14.71875 9.28125 L 12.71875 7.28125 Z M 20 6.59375 L 19.28125 7.28125 L 15.28125 11.28125 L 14.59375 12 L 15.28125 12.71875 L 20.28125 17.71875 L 21.71875 16.28125 L 17.4375 12 L 20 9.4375 L 26.5625 16 L 20 22.5625 L 18.71875 21.28125 L 17.28125 22.71875 L 19.28125 24.71875 L 20 25.40625 L 20.71875 24.71875 L 28.71875 16.71875 L 29.40625 16 L 28.71875 15.28125 L 20.71875 7.28125 Z"></path></g></svg>`;      
    setIconSource("Gen-icon", pmc37svg); 
    const pmc38svg = `<svg fill="#49c4b1" width="30" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M 12 6.59375 L 11.28125 7.28125 L 3.28125 15.28125 L 2.59375 16 L 3.28125 16.71875 L 11.28125 24.71875 L 12 25.40625 L 12.71875 24.71875 L 16.71875 20.71875 L 17.40625 20 L 16.71875 19.28125 L 11.71875 14.28125 L 10.28125 15.71875 L 14.5625 20 L 12 22.5625 L 5.4375 16 L 12 9.4375 L 13.28125 10.71875 L 14.71875 9.28125 L 12.71875 7.28125 Z M 20 6.59375 L 19.28125 7.28125 L 15.28125 11.28125 L 14.59375 12 L 15.28125 12.71875 L 20.28125 17.71875 L 21.71875 16.28125 L 17.4375 12 L 20 9.4375 L 26.5625 16 L 20 22.5625 L 18.71875 21.28125 L 17.28125 22.71875 L 19.28125 24.71875 L 20 25.40625 L 20.71875 24.71875 L 28.71875 16.71875 L 29.40625 16 L 28.71875 15.28125 L 20.71875 7.28125 Z"></path></g></svg>`;      
    setIconSource("GEN-icon", pmc38svg);
    setIconSource("general-icon", pmc38svg); 
    
    //AUTHORITIES APPROVAL PROCESS ICONS
    const pmc2svg = `<svg fill="#49c4b1" width="24" viewBox="0 0 32 32" enable-background="new 0 0 32 32" version="1.1" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g id="Approved"></g> <g id="Approved_1_"></g> <g id="File_Approve"> <g> <path d="M26,24c-0.553,0-1,0.448-1,1v4H7V3h10v7c0,0.552,0.447,1,1,1h7v4c0,0.552,0.447,1,1,1s1-0.448,1-1v-4.903 c0.003-0.033,0.02-0.063,0.02-0.097c0-0.337-0.166-0.635-0.421-0.816l-7.892-7.891c-0.086-0.085-0.187-0.147-0.292-0.195 c-0.031-0.015-0.063-0.023-0.097-0.034c-0.082-0.028-0.166-0.045-0.253-0.05C18.043,1.012,18.022,1,18,1H6C5.447,1,5,1.448,5,2v28 c0,0.552,0.447,1,1,1h20c0.553,0,1-0.448,1-1v-5C27,24.448,26.553,24,26,24z M19,9V4.414L23.586,9H19z"></path> <path d="M30.73,15.317c-0.379-0.404-1.01-0.424-1.414-0.047l-10.004,9.36l-4.629-4.332c-0.404-0.378-1.036-0.357-1.414,0.047 c-0.377,0.403-0.356,1.036,0.047,1.413l5.313,4.971c0.192,0.18,0.438,0.27,0.684,0.27s0.491-0.09,0.684-0.27l10.688-10 C31.087,16.353,31.107,15.72,30.73,15.317z"></path> </g> </g> <g id="Folder_Approved"></g> <g id="Security_Approved"></g> <g id="Certificate_Approved"></g> <g id="User_Approved"></g> <g id="ID_Card_Approved"></g> <g id="Android_Approved"></g> <g id="Privacy_Approved"></g> <g id="Approved_2_"></g> <g id="Message_Approved"></g> <g id="Upload_Approved"></g> <g id="Download_Approved"></g> <g id="Email_Approved"></g> <g id="Data_Approved"></g> </g></svg>`;      
    setIconSource("AP-icon", pmc2svg); 
     
    //MECHANICAL CONSTRUCTION COST ICONS
    const pmc3svg = `<svg fill="#49c4b1" width="30" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M 12 6.59375 L 11.28125 7.28125 L 3.28125 15.28125 L 2.59375 16 L 3.28125 16.71875 L 11.28125 24.71875 L 12 25.40625 L 12.71875 24.71875 L 16.71875 20.71875 L 17.40625 20 L 16.71875 19.28125 L 11.71875 14.28125 L 10.28125 15.71875 L 14.5625 20 L 12 22.5625 L 5.4375 16 L 12 9.4375 L 13.28125 10.71875 L 14.71875 9.28125 L 12.71875 7.28125 Z M 20 6.59375 L 19.28125 7.28125 L 15.28125 11.28125 L 14.59375 12 L 15.28125 12.71875 L 20.28125 17.71875 L 21.71875 16.28125 L 17.4375 12 L 20 9.4375 L 26.5625 16 L 20 22.5625 L 18.71875 21.28125 L 17.28125 22.71875 L 19.28125 24.71875 L 20 25.40625 L 20.71875 24.71875 L 28.71875 16.71875 L 29.40625 16 L 28.71875 15.28125 L 20.71875 7.28125 Z"></path></g></svg>`;      
     
    //ELECTRICAL DATA ICONS
    const pmc4svg = `<svg viewBox="0 0 16 16" width="24" xmlns="http://www.w3.org/2000/svg" fill="none"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="#49c4b1" fill-rule="evenodd" d="M8 1a.75.75 0 01.75.75V7h3.69l-.97-.97a.75.75 0 011.06-1.06l2.25 2.25a.75.75 0 010 1.06l-2.25 2.25a.75.75 0 11-1.06-1.06l.97-.97H8.75v4.08l1.002-.89a.75.75 0 01.996 1.12l-2.25 2a.75.75 0 01-.996 0l-2.25-2a.75.75 0 01.996-1.12l1.002.89V8.5H3.56l.97.97a.75.75 0 11-1.06 1.06L1.22 8.28a.75.75 0 010-1.06l2.25-2.25a.75.75 0 011.06 1.06L3.56 7h3.69V1.75A.75.75 0 018 1z" clip-rule="evenodd"></path></g></svg>`;      
    setIconSource("TNPL-icon", pmc4svg); 
    const pmc5svg = `<svg viewBox="0 0 16 16" width="24" xmlns="http://www.w3.org/2000/svg" fill="none"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="#ff7300" fill-rule="evenodd" d="M8 1a.75.75 0 01.75.75V7h3.69l-.97-.97a.75.75 0 011.06-1.06l2.25 2.25a.75.75 0 010 1.06l-2.25 2.25a.75.75 0 11-1.06-1.06l.97-.97H8.75v4.08l1.002-.89a.75.75 0 01.996 1.12l-2.25 2a.75.75 0 01-.996 0l-2.25-2a.75.75 0 01.996-1.12l1.002.89V8.5H3.56l.97.97a.75.75 0 11-1.06 1.06L1.22 8.28a.75.75 0 010-1.06l2.25-2.25a.75.75 0 011.06 1.06L3.56 7h3.69V1.75A.75.75 0 018 1z" clip-rule="evenodd"></path></g></svg>`;      
    setIconSource("TSPL-icon", pmc5svg); 
    const pmc6svg = `<svg viewBox="0 0 16 16" width="24" xmlns="http://www.w3.org/2000/svg" fill="none"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="#b42727" fill-rule="evenodd" d="M8 1a.75.75 0 01.75.75V7h3.69l-.97-.97a.75.75 0 011.06-1.06l2.25 2.25a.75.75 0 010 1.06l-2.25 2.25a.75.75 0 11-1.06-1.06l.97-.97H8.75v4.08l1.002-.89a.75.75 0 01.996 1.12l-2.25 2a.75.75 0 01-.996 0l-2.25-2a.75.75 0 01.996-1.12l1.002.89V8.5H3.56l.97.97a.75.75 0 11-1.06 1.06L1.22 8.28a.75.75 0 010-1.06l2.25-2.25a.75.75 0 011.06 1.06L3.56 7h3.69V1.75A.75.75 0 018 1z" clip-rule="evenodd"></path></g></svg>`;      
    setIconSource("TEPL-icon", pmc6svg); 
    const pmc7svg = `<svg viewBox="0 0 16 16" width="24" xmlns="http://www.w3.org/2000/svg" fill="none"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="#ababab" fill-rule="evenodd" d="M8 1a.75.75 0 01.75.75V7h3.69l-.97-.97a.75.75 0 011.06-1.06l2.25 2.25a.75.75 0 010 1.06l-2.25 2.25a.75.75 0 11-1.06-1.06l.97-.97H8.75v4.08l1.002-.89a.75.75 0 01.996 1.12l-2.25 2a.75.75 0 01-.996 0l-2.25-2a.75.75 0 01.996-1.12l1.002.89V8.5H3.56l.97.97a.75.75 0 11-1.06 1.06L1.22 8.28a.75.75 0 010-1.06l2.25-2.25a.75.75 0 011.06 1.06L3.56 7h3.69V1.75A.75.75 0 018 1z" clip-rule="evenodd"></path></g></svg>`;      
    setIconSource("LSL-icon", pmc7svg); 
   // const pmc8svg = `<svg fill="#49c4b1" width="30" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M 12 6.59375 L 11.28125 7.28125 L 3.28125 15.28125 L 2.59375 16 L 3.28125 16.71875 L 11.28125 24.71875 L 12 25.40625 L 12.71875 24.71875 L 16.71875 20.71875 L 17.40625 20 L 16.71875 19.28125 L 11.71875 14.28125 L 10.28125 15.71875 L 14.5625 20 L 12 22.5625 L 5.4375 16 L 12 9.4375 L 13.28125 10.71875 L 14.71875 9.28125 L 12.71875 7.28125 Z M 20 6.59375 L 19.28125 7.28125 L 15.28125 11.28125 L 14.59375 12 L 15.28125 12.71875 L 20.28125 17.71875 L 21.71875 16.28125 L 17.4375 12 L 20 9.4375 L 26.5625 16 L 20 22.5625 L 18.71875 21.28125 L 17.28125 22.71875 L 19.28125 24.71875 L 20 25.40625 L 20.71875 24.71875 L 28.71875 16.71875 L 29.40625 16 L 28.71875 15.28125 L 20.71875 7.28125 Z"></path></g></svg>`;      
    
    
     //MEDICAL GASES ICONS
    const pmc9svg = `<svg fill="#49c4b1"  width="24" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" xmlns:xlink="http://www.w3.org/1999/xlink" enable-background="new 0 0 512 512" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path d="m228.7,129.4c-54.6,0-98.9,44.3-98.9,98.9s44.3,98.9 98.9,98.9 98.9-44.3 98.9-98.9-44.3-98.9-98.9-98.9zm0,162.7c-35.2,0-63.8-28.6-63.8-63.8s28.6-63.8 63.8-63.8 63.8,28.6 63.8,63.8-28.5,63.8-63.8,63.8z"></path> <path d="M398.3,11H113.7C57.1,11,11,57.1,11,113.7v284.6C11,454.9,57.1,501,113.7,501h284.6c56.6,0,102.7-46.1,102.7-102.7V113.7 C501,57.1,454.9,11,398.3,11z M460.2,398.3c0,34.1-27.8,61.9-61.9,61.9H113.7c-34.1,0-61.9-27.8-61.9-61.9V113.7 c0-34.1,27.8-61.9,61.9-61.9h284.6c34.1,0,61.9,27.8,61.9,61.9V398.3z"></path> <path d="m363.8,349.4c6.1-6.3 10.2-11.5 12.4-15.5 2.2-4 3.4-8.3 3.4-12.7 0-8.1-2.8-14.5-8.4-19.2-5.6-4.7-12.1-7-19.5-7-7.4,0-13.5,1.6-18.3,4.8-4.8,3.2-9.2,7.9-13.2,14.1l15.3,9.1c4.8-7.7 9.9-11.5 15.3-11.5 2.9,0 5.4,1 7.2,2.9 1.9,1.9 2.8,4.3 2.8,7.2 0,2.9-1.1,5.8-3.3,8.9-2.2,3.1-5.8,7.2-10.8,12.3l-25.1,25.7v14.2h60.4v-17.2h-33.8l15.6-16.1z"></path> </g> </g> </g></svg>`;      
    setIconSource("OXYGEN-icon", pmc9svg); 
    const pmc10svg = `<svg viewBox="0 0 24 24" width="24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M8 12H14M16.5 4C17.8807 4 19 5.11929 19 6.5C19 7.88071 17.8807 9 16.5 9H14M5 9H10M17 19C18.1046 19 19 18.1046 19 17C19 15.8954 18.1046 15 17 15H11M4 15H7" stroke="#49c4b1" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>`;      
    setIconSource("MA-icon", pmc10svg); 
    const pmc11svg = `<svg fill="#49c4b1"  width="24" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 60.007 60.007" xml:space="preserve" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M27.004,53.007h-14c-0.552,0-1,0.447-1,1s0.448,1,1,1h14c0.552,0,1-0.447,1-1S27.556,53.007,27.004,53.007z"></path> <path d="M27.004,49.007h-14c-0.552,0-1,0.447-1,1s0.448,1,1,1h14c0.552,0,1-0.447,1-1S27.556,49.007,27.004,49.007z"></path> <path d="M20.004,23.007c-5.514,0-10,4.935-10,11s4.486,11,10,11s10-4.935,10-11S25.518,23.007,20.004,23.007z M20.004,43.007 c-4.411,0-8-4.037-8-9s3.589-9,8-9s8,4.037,8,9S24.415,43.007,20.004,43.007z"></path> <path d="M20.004,27.007c-2.206,0-4,1.794-4,4s1.794,4,4,4s4-1.794,4-4S22.209,27.007,20.004,27.007z M20.004,33.007 c-1.103,0-2-0.897-2-2c0-1.103,0.897-2,2-2s2,0.897,2,2C22.004,32.11,21.107,33.007,20.004,33.007z"></path> <path d="M59.004,58.007h-1v-3h-4v-4h-2v-15v-6v-3.414l3.028-3.028c2.562-2.561,3.972-5.966,3.972-9.589v-2.969v-2V5.901 c0-1.886-0.912-3.61-2.438-4.612c-2.316-1.521-4.918-1.703-7.141-0.505c-2.11,1.14-3.421,3.332-3.421,5.724v17.601l-10,10v-0.101 c0-6.7-4.144-12.443-10-14.822v-1.178c0-3.309-2.691-6-6-6s-6,2.691-6,6v1.178c-4.112,1.671-7.365,5.003-8.946,9.159 c-3.12,1.783-5.054,5.055-5.054,8.663c0,3.155,1.494,6.087,4,7.975v3.025v2v10h6v-2h20v2h6v-10v-2v-5.414l10-10v3.414v15h-2v4h-4v3 h-1c-0.552,0-1,0.447-1,1s0.448,1,1,1h1h18h1c0.552,0,1-0.447,1-1S59.556,58.007,59.004,58.007z M50.004,34.007h-2v-2h2V34.007z M53.004,9.007v2v1.312c0,1.617-0.351,3.204-1,4.667V6.507c0-0.275,0.224-0.5,0.5-0.5s0.5,0.225,0.5,0.5V9.007z M57.004,13.976 c0,3.088-1.203,5.991-3.386,8.175l-1.614,1.614v-2.953c1.937-2.409,3-5.41,3-8.493v-1.312h2V13.976z M48.004,6.507 c0-1.655,0.909-3.174,2.371-3.964c1.554-0.839,3.411-0.687,5.093,0.417c0.948,0.622,1.536,1.749,1.536,2.94v3.106h-2v-2.5 c0-1.379-1.122-2.5-2.5-2.5s-2.5,1.121-2.5,2.5v13.576v8.51v1.414h-2v-7.899V6.507z M16.004,18.527v-0.52c0-2.206,1.794-4,4-4 s4,1.794,4,4v0.52c-0.081-0.021-0.163-0.036-0.244-0.056c-0.246-0.06-0.49-0.122-0.74-0.169c-0.395-0.077-0.791-0.135-1.189-0.182 c-0.141-0.016-0.283-0.029-0.426-0.041c-0.467-0.042-0.934-0.071-1.402-0.071s-0.935,0.029-1.402,0.071 c-0.142,0.012-0.284,0.025-0.426,0.041c-0.397,0.047-0.794,0.105-1.189,0.182c-0.25,0.048-0.494,0.11-0.74,0.169 C16.166,18.491,16.084,18.505,16.004,18.527z M2.004,37.007c0-2.092,0.808-4.049,2.204-5.512c-0.023,0.144-0.033,0.288-0.053,0.432 c-0.028,0.214-0.059,0.426-0.078,0.643c-0.044,0.478-0.073,0.957-0.073,1.437v8.29C2.728,40.853,2.004,38.981,2.004,37.007z M6.004,58.007v-8h2v8H6.004z M34.004,58.007h-2v-8h2V58.007z M34.004,48.007h-4v8h-20v-8h-4v-1.645V34.007 c0-0.432,0.026-0.857,0.065-1.279c0.021-0.227,0.056-0.453,0.089-0.679c0.025-0.174,0.049-0.349,0.08-0.521 c0.055-0.3,0.12-0.599,0.196-0.896c0.02-0.079,0.04-0.158,0.061-0.237c0.091-0.337,0.193-0.673,0.31-1.007 c1.404-4.001,4.571-7.17,8.57-8.578c0.341-0.12,0.685-0.224,1.03-0.317c0.064-0.017,0.129-0.033,0.193-0.05 c0.319-0.081,0.639-0.151,0.96-0.208c0.121-0.021,0.244-0.038,0.367-0.056c0.282-0.043,0.563-0.084,0.846-0.11 c0.218-0.019,0.44-0.024,0.661-0.033c0.383-0.016,0.766-0.016,1.149,0c0.221,0.009,0.443,0.014,0.661,0.033 c0.282,0.026,0.564,0.066,0.846,0.11c0.122,0.018,0.246,0.035,0.367,0.056c0.321,0.058,0.641,0.128,0.959,0.208 c0.065,0.016,0.129,0.033,0.193,0.05c0.345,0.093,0.689,0.197,1.03,0.317c5.448,1.918,9.369,7.101,9.369,13.197v2.101v8.485V48.007 z M36.004,36.936l10-10v2.829l-10,10V36.936z M48.004,36.007h2v15h-2V36.007z M46.004,53.007h6v2h-6V53.007z M42.004,58.007v-1h2 h10h2v1H42.004z"></path> </g> </g></svg>`;      
    setIconSource("VACUUM-icon", pmc11svg); 
    const pmc12svg = `<svg fill="#49c4b1" width="24" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512.001 512.001" xml:space="preserve" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path d="M511.747,374.302l-39.385-242.905c-1.547-9.535-9.779-16.542-19.439-16.542H59.078c-9.658,0-17.892,7.007-19.439,16.542 L0.254,374.302c-0.924,5.699,0.7,11.515,4.441,15.913c3.742,4.398,9.224,6.93,14.998,6.93h472.615 c5.773,0,11.256-2.534,14.998-6.93C511.048,385.818,512.672,380.001,511.747,374.302z M42.835,357.762l16.341-100.784 l16.341,100.784H42.835z M115.416,357.761v0.001L82.417,154.241h353.75l32.999,203.52H115.416z"></path> </g> </g> <g> <g> <path d="M393.847,236.309H157.539c-10.875,0-19.692,8.817-19.692,19.692c0,10.875,8.817,19.692,19.692,19.692h236.308 c10.875,0,19.692-8.817,19.692-19.692C413.539,245.126,404.722,236.309,393.847,236.309z"></path> </g> </g> </g></svg>`;      
    setIconSource("AR-icon", pmc12svg); 

   //FIREFIGHTING ICONS
    const pmc13svg = `<svg viewBox="0 0 960 960" width="24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M530.405 500.586C485.98 523.489 473.175 573.351 479.05 618.82C482.947 639.823 495.598 658.785 504.81 677.891C512.487 695.706 511.953 713.055 499.166 728.737C464.573 776.908 384.732 744.32 397.904 681.572C384.515 682.073 375.092 688.74 368.163 698.562C329.782 746.332 357.699 810.454 405.567 839.575C413.277 844.836 424.658 851.661 419.716 862.578C416.985 868.803 411.695 871.018 404.956 870.475C302.052 862.186 225.957 798.881 197.611 699.729C174.372 637.85 198.524 502.352 267.344 480.685C280.821 477.999 291.771 487.71 290.035 501.328C288.603 512.556 284.768 523.592 281.054 534.388C267.644 566.949 300.493 616.604 335.433 594.108C344.375 588.621 349.161 580.766 349.827 570.353C353.475 508.29 289.435 484.64 301.847 415.786C299.383 384.935 358.144 292.504 390.477 314.361C396.028 319.052 397.841 325.365 395.799 332.08C390.315 350.245 378.59 366.81 381.052 386.552C382.677 414.517 420.441 435.513 444.808 421.325C467.988 407.827 488.717 380.445 468.361 345.751C461.094 333.364 454.46 320.607 447.293 308.16C366.163 177.455 561.274 44.0055 566.822 113.011C560.664 145.016 534.329 169.982 532.303 203.566C530.219 215.866 533.247 227.3 539.746 238.021C618.558 349.995 706.545 333.627 644.486 502.23C640.179 515.947 645.215 530.41 662.186 524.816C702.527 513.299 693.207 464.945 695.477 432.634C695.926 425.307 698.564 419.32 706.173 416.961C713.549 414.674 719.541 417.797 722.91 423.868C731.005 438.455 739.228 453.092 745.742 468.414C782.492 554.847 783.915 641.873 748.146 728.98C735.626 759.468 716.435 785.618 690.915 806.409C673.965 820.218 655.897 832.798 637.489 844.62C625.772 852.145 615.684 851.104 610.22 844.23C589.852 823.986 691.375 726.281 618.219 667.388C557.07 625.88 503.776 583.352 530.405 500.586Z" fill="#b42727"></path> <path d="M752.837 345.964C717.484 341.923 730.499 306.071 748.981 288.603C789.029 247.117 828.321 204.701 870.398 165.257C881.91 154.161 901.816 149.771 911.675 165.538C917.235 173.681 917.123 185.646 910.489 194.222C866.226 242.087 819.547 287.874 774.501 335.051C768.5 341.237 761.986 346.147 752.837 345.964Z" fill="#b42727"></path> <path d="M169.252 89.7578C177.631 89.9658 186.03 96.3628 193.481 104.406C231.966 148.222 275.865 188.072 309.931 235.451C321.48 254.973 298.533 277.04 279.575 264.351C235.538 227.461 198.018 182.624 157.999 141.37C139.402 123.864 134.074 91.0438 169.252 89.7578Z" fill="#b42727"></path> <path d="M142.623 522.604C115.769 516.09 88.8085 509.987 61.9185 503.653C34.6865 498.633 32.2045 458.606 61.5185 455.219C66.3685 454.825 71.5235 455.207 76.2255 456.435C103.392 464.466 131.877 469.442 158.095 480.126C180.677 492.941 167.447 524.453 142.947 521.176C142.838 521.652 142.731 522.128 142.623 522.604Z" fill="#b42727"></path> <path d="M893.483 431.125C920.761 431.041 929.763 466.751 905.006 478.527C883.034 486.531 859.369 489.656 836.678 495.329C823.436 498.18 811.679 491.93 808.098 480.745C801.937 463.899 818.645 450.534 834.7 447.32C854.23 441.696 873.501 434.981 893.483 431.125Z" fill="#b42727"></path> <path d="M671.438 140.391C725.618 148.581 674.1 208.857 661.803 234.774C655.762 244.931 644.188 247.394 635.064 243.126C620.171 236.98 621.2 217.327 627.906 204.08C638.844 184.119 644.432 140.758 671.438 140.391Z" fill="#b42727"></path> <path d="M217.187 385.323C195.362 380.462 175.608 367.381 155.711 357.424C143.359 350.264 140.393 335.175 146.689 323.863C152.824 312.84 166.919 307.221 179.249 313.702C197.378 323.232 215.093 333.921 231.646 345.957C251.028 361.961 238.175 381.934 217.974 386.619C217.711 386.188 217.449 385.756 217.187 385.323Z" fill="#b42727"></path> </g></svg>`;      
    setIconSource("IF-icon", pmc13svg); 
    const pmc14svg = `<svg viewBox="-0.01 0 48 48" width="24" xmlns="http://www.w3.org/2000/svg" fill="#b42727" stroke="#b42727"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path id="fire" d="M600,342.962V343H571V322.445l-1.607,1.544-1.381-1.381L585,306l6.707,7.293-1.414,1.415-5.325-5.677L573,320.523V341h20.193c-3.683-1.728-7.364-4.649-8.646-9.046-2.307-7.91,3.245-15.753,4.071-16.685-.509.855-1.208,3.775.336,5.7,2.49-3.248,6.233-7.281,6.829-9,1.229-3.642-1.994-6.9-2.082-10.4-.088-2.592,2.223-5.359,5.442-6.566-2.43,1.418-3.241,3.324-2.545,5.165.966,2.557,4.747,4.186,6.151,6.5a3.581,3.581,0,0,1,.6,2.879c.117.084.234.164.351.25a4.2,4.2,0,0,0,.007-4.514,5.415,5.415,0,0,1,3.16,3.923,7.462,7.462,0,0,1-.305,3.166,11.165,11.165,0,0,1,3.1,8.429c.645.752,1.285,1.527,1.865,2.342a4.5,4.5,0,0,0-.1-3.013s10.211,10.739.083,17.706c-1.451,1.208-4.65,5.17-10.714,5.17C600.558,343,600.29,342.987,600,342.962Zm-13.543-11.571c1.968,6.75,11.06,9.608,14.345,9.608,5.2,0,7.258-2.889,9.444-4.71l.07-.059.076-.052c2.2-1.51,3.366-3.243,3.579-5.3a9.523,9.523,0,0,0-1-4.865l-.41,2.019-2.656-3.735c-.566-.8-1.2-1.558-1.753-2.2l-.537-.627.06-.825a9.181,9.181,0,0,0-2.594-6.944l-.7-.779.2-.833-.366.563-1.695-1.256c-.066-.049-.131-.094-.2-.141l-.123-.087-1.132-.806.361-1.346c.037-.137.134-.5-.364-1.292a11.328,11.328,0,0,0-2.422-2.354,18.949,18.949,0,0,1-2.736-2.542,20.566,20.566,0,0,0,.812,2.23c.894,2.2,1.908,4.7.948,7.547-.5,1.442-2.028,3.332-4.481,6.3-.915,1.105-1.861,2.249-2.657,3.286l-1.542,2.012-1.584-1.979c-.077-.1-.15-.193-.221-.293A15.116,15.116,0,0,0,586.457,331.392ZM598,339V321h.293l-2.647-2.647.707-.706,6,6-.707.707L599,321.708V339Zm-9.272-23.854s-.042.044-.11.122A.315.315,0,0,1,588.728,315.147Z" transform="translate(-568.012 -295)" fill="#b42727"></path> </g></svg>`;      
    setIconSource("EF-icon", pmc14svg); 
    const pmc15svg = `<svg viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg" fill="#49c4b1" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill="none" stroke="#49c4b1" stroke-width="2" d="M2,5.07692308 C2,5.07692308 3.66666667,2 12,2 C20.3333333,2 22,5.07692308 22,5.07692308 L22,18.9230769 C22,18.9230769 20.3333333,22 12,22 C3.66666667,22 2,18.9230769 2,18.9230769 L2,5.07692308 Z M2,13 C2,13 5.33333333,16 12,16 C18.6666667,16 22,13 22,13 M2,7 C2,7 5.33333333,10 12,10 C18.6666667,10 22,7 22,7"></path> </g></svg>`;      
    setIconSource("STORAGE-icon", pmc15svg); 
    const pmc16svg = `<svg fill="#49c4b1" width="24" viewBox="-5.99 0 122.88 122.88" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="enable-background:new 0 0 110.9 122.88" xml:space="preserve" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M99.06,20.2c0.27,0.13,0.51,0.3,0.74,0.52c0.06,0.06,0.11,0.12,0.16,0.18c2.89,2.29,5.78,4.88,7.88,8 c2.32,3.45,3.61,7.44,2.83,12.17c-0.33,1.98-1.08,3.71-2.22,5.24c-0.82,1.09-1.82,2.05-3,2.89c-0.06,1.53-0.08,3.03-0.08,4.52 c0.01,1.91,0.07,3.88,0.18,5.9c0.25,4.74,0.96,9.52,1.67,14.26c0.76,5.1,1.52,10.16,1.72,15.43c0.27,6.75-0.53,12.3-2.76,16.22 c-2.48,4.38-6.51,6.72-12.45,6.51v0c-7.09-0.13-11.45-4.11-13.42-11.46c-1.72-6.43-1.46-15.61,0.49-27.16 c-0.06-9.15-1.25-16.08-3.61-20.75c-1.54-3.05-3.63-5.07-6.27-6.03v59.91c0.86,0.41,1.64,0.97,2.3,1.64 c1.52,1.52,2.47,3.63,2.47,5.95v5.98c0,1.51-1.23,2.74-2.74,2.74H2.74c-1.51,0-2.74-1.23-2.74-2.74v-5.98 c0-2.32,0.95-4.42,2.47-5.95c0.47-0.47,1-0.89,1.57-1.24V14.52c0-4,1.63-7.63,4.26-10.26C10.93,1.63,14.56,0,18.56,0h37.78 C60.35,0,64,1.64,66.64,4.28c2.64,2.64,4.28,6.29,4.28,10.31v26.36c4.86,1.06,8.57,4.17,11.15,9.27 c2.77,5.47,4.15,13.31,4.19,23.46c0,0.16-0.01,0.32-0.04,0.47l0.01,0c-1.85,10.87-2.15,19.35-0.63,25.02 c1.27,4.77,3.95,7.35,8.24,7.41l0.05,0v0c3.66,0.12,6.09-1.22,7.52-3.75c1.69-2.98,2.28-7.55,2.05-13.31 c-0.19-4.88-0.94-9.85-1.68-14.85c-0.72-4.82-1.44-9.68-1.71-14.78c-0.11-2.01-0.17-4.06-0.18-6.18c-0.01-1.68,0.02-3.34,0.09-4.97 c-5.11-4.48-8.22-8.96-9.18-13.42c-0.91-4.23,0.05-8.29,3-12.17c-2.25-1.54-4.54-2.8-6.86-3.81c-3.17-1.38-6.43-2.31-9.75-2.85 c-1.49-0.24-2.5-1.65-2.26-3.14c0.24-1.49,1.65-2.5,3.14-2.26c3.76,0.61,7.45,1.66,11.06,3.23C92.54,15.82,95.85,17.75,99.06,20.2 L99.06,20.2z M65.44,44.23c-0.12-0.34-0.18-0.7-0.15-1.08c0.02-0.27,0.07-0.52,0.15-0.76v-27.8c0-2.5-1.03-4.78-2.68-6.43 c-1.65-1.65-3.93-2.68-6.43-2.68H18.56c-2.48,0-4.74,1.02-6.38,2.66c-1.64,1.64-2.66,3.9-2.66,6.38v91.22h55.92V44.23L65.44,44.23z M68.42,111.46c-0.08,0.01-0.15,0.01-0.23,0.01H7.26c-0.34,0.15-0.65,0.36-0.91,0.62c-0.53,0.53-0.86,1.26-0.86,2.07v3.24h64.73 v-3.24c0-0.8-0.33-1.53-0.86-2.07C69.09,111.82,68.77,111.61,68.42,111.46L68.42,111.46z M23.04,13.74h29.44 c1.53,0,2.92,0.62,3.92,1.63c0.07,0.07,0.14,0.14,0.2,0.22c0.89,0.99,1.43,2.29,1.43,3.7v18.78c0,1.53-0.62,2.92-1.63,3.92 c-1,1-2.39,1.63-3.92,1.63H23.04c-1.52,0-2.9-0.63-3.91-1.63l-0.01,0.01c-1-1-1.63-2.39-1.63-3.92V19.29 c0-1.53,0.62-2.92,1.63-3.92c0.07-0.07,0.14-0.14,0.22-0.2C20.33,14.28,21.63,13.74,23.04,13.74L23.04,13.74z M52.48,19.22H23.04 c-0.01,0-0.02,0-0.02,0L23,19.24c-0.01,0.01-0.02,0.03-0.02,0.04v18.78c0,0.01,0.01,0.03,0.02,0.04L23,38.12L23,38.12 c0.01,0.01,0.02,0.01,0.04,0.01h29.44c0.01,0,0.03-0.01,0.04-0.02c0.01-0.01,0.02-0.03,0.02-0.04V19.29c0-0.01,0-0.02,0-0.02 l-0.02-0.02C52.51,19.23,52.5,19.22,52.48,19.22L52.48,19.22z M98.15,26.5c-1.91,2.56-2.55,5.12-1.99,7.7 c0.67,3.12,3,6.44,6.88,9.95c0.39-0.35,0.74-0.72,1.03-1.11c0.61-0.81,1.02-1.76,1.19-2.84c0.52-3.16-0.37-5.87-1.97-8.25 C101.97,29.97,100.13,28.16,98.15,26.5L98.15,26.5z"></path> </g> </g></svg>`;      
    setIconSource("FP-icon", pmc16svg); 
    const pmc40svg = `<svg fill="#49c4b1" width="30" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M 12 6.59375 L 11.28125 7.28125 L 3.28125 15.28125 L 2.59375 16 L 3.28125 16.71875 L 11.28125 24.71875 L 12 25.40625 L 12.71875 24.71875 L 16.71875 20.71875 L 17.40625 20 L 16.71875 19.28125 L 11.71875 14.28125 L 10.28125 15.71875 L 14.5625 20 L 12 22.5625 L 5.4375 16 L 12 9.4375 L 13.28125 10.71875 L 14.71875 9.28125 L 12.71875 7.28125 Z M 20 6.59375 L 19.28125 7.28125 L 15.28125 11.28125 L 14.59375 12 L 15.28125 12.71875 L 20.28125 17.71875 L 21.71875 16.28125 L 17.4375 12 L 20 9.4375 L 26.5625 16 L 20 22.5625 L 18.71875 21.28125 L 17.28125 22.71875 L 19.28125 24.71875 L 20 25.40625 L 20.71875 24.71875 L 28.71875 16.71875 L 29.40625 16 L 28.71875 15.28125 L 20.71875 7.28125 Z"></path></g></svg>`;      
    setIconSource("OTHERS-icon", pmc40svg); 

    //PROJECT AREA ICONS
    const pmc17svg = `<svg viewBox="0 0 24 24" width="24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill-rule="evenodd" clip-rule="evenodd" d="M13.9928 6.6967L17.1747 3.51472L20.3567 6.6967L19.2961 7.75736L17.9247 6.38604L17.9247 17.614L19.2961 16.2426L20.3567 17.3033L17.1747 20.4853L13.9928 17.3033L15.0534 16.2426L16.4247 17.614V6.38604L15.0534 7.75736L13.9928 6.6967Z" fill="#49c4b1"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M3.75 4.5L4.5 3.75H12L12.75 4.5V19.5L12 20.25H4.5L3.75 19.5V4.5ZM5.25 5.25V18.75H11.25V17.25H8.25V15.75H11.25V14.25H8.25V12.75H11.25V11.25H7.5V9.75H11.25V8.25H8.25V6.75H11.25V5.25H5.25Z" fill="#49c4b1"></path> </g></svg>`;      
    setIconSource("PA-icon", pmc17svg); 


    //PLUMBING ICONS
    const pmc19svg = `<svg viewBox="0 0 24 24" width="24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M2.5 14.5L3.11612 15.1161C3.68206 15.6821 4.44964 16 5.25 16C6.05036 16 6.81794 15.6821 7.38388 15.1161L7.61612 14.8839C8.18206 14.3179 8.94964 14 9.75 14C10.5504 14 11.3179 14.3179 11.8839 14.8839L12.1161 15.1161C12.6821 15.6821 13.4496 16 14.25 16C15.0504 16 15.8179 15.6821 16.3839 15.1161L16.6161 14.8839C17.1821 14.3179 17.9496 14 18.75 14C19.5504 14 20.3179 14.3179 20.8839 14.8839L21.5 15.5M2.5 19.5L3.11612 20.1161C3.68206 20.6821 4.44964 21 5.25 21C6.05036 21 6.81794 20.6821 7.38388 20.1161L7.61612 19.8839C8.18206 19.3179 8.94964 19 9.75 19C10.5504 19 11.3179 19.3179 11.8839 19.8839L12.1161 20.1161C12.6821 20.6821 13.4496 21 14.25 21C15.0504 21 15.8179 20.6821 16.3839 20.1161L16.6161 19.8839C17.1821 19.3179 17.9496 19 18.75 19C19.5504 19 20.3179 19.3179 20.8839 19.8839L21.5 20.5M12 11V3M12 3L9 6M12 3L15 6" stroke="#49c4b1" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>`;      
    setIconSource("PDFR-icon", pmc19svg); 
    const pmc20svg = `<svg viewBox="0 0 1024 1024" width ="24" fill="#49c4b1" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M810.946385 398.138063V127.312332L763.491287 0H399.541305l-45.158883 127.567467v345.069997h76.54048v115.065854h0.127568v121.444229c19.262687 4.847564 37.75997 13.394584 54.34374 25.896195l28.957815 21.941605v-43.500507h83.811826c42.862669-15.308096 91.338306-10.715667 130.88422 14.032422V587.703318h78.198857v151.550151l5.485401-4.209727c23.089711-17.476743 50.134014-27.427005 77.816155-29.850787v-117.489637h109.197751V398.138063h-188.79985zM453.629911 76.54048h256.79331l19.517823 52.302661H435.005061L453.629911 76.54048z m-22.834576 319.684071V203.980379h303.61057v192.244172H641.664357v-104.73289h-113.79018v104.73289h-97.078842z m214.951181 284.347883h-131.394491v-30.871327h131.394491v30.871327z m0-63.783733h-131.394491v-29.085383h131.394491v29.085383z m277.459239-105.625862H507.463382V474.550976h415.742373v36.611863zM776.375601 1023.984054a112.004236 112.004236 0 0 1-67.865892-22.707009l-37.887537-28.70268c-12.756747-9.695127-30.488625-9.56756-43.117804 0l-37.887538 28.70268c-39.928617 30.23349-95.6756 30.361057-135.604217 0l-37.887537-28.70268c-12.756747-9.695127-30.488625-9.56756-43.117804 0l-37.887537 28.70268c-39.928617 30.23349-95.6756 30.361057-135.604217 0l-37.887538-28.70268c-12.756747-9.56756-30.488625-9.56756-43.117804 0l-49.496177 37.504835a38.244726 38.244726 0 1 1-46.179422-60.977249l49.496177-37.504835c39.928617-30.23349 95.803167-30.23349 135.604216 0l37.887538 28.70268c12.756747 9.56756 30.488625 9.56756 43.117804 0l37.887537-28.70268c39.928617-30.23349 95.6756-30.361057 135.604217 0l37.887538 28.70268c12.756747 9.56756 30.488625 9.56756 43.117804 0l37.887537-28.70268c39.928617-30.23349 95.6756-30.361057 135.604217 0l37.887538 28.70268c12.756747 9.56756 30.488625 9.56756 43.117803 0l37.887538-28.70268c39.928617-30.23349 95.6756-30.361057 135.604217 0l37.887537 28.70268a38.244726 38.244726 0 1 1-46.179422 60.977249l-37.887538-28.70268c-12.756747-9.56756-30.488625-9.56756-43.117804 0l-37.887537 28.70268a112.259371 112.259371 0 0 1-67.865893 22.707009zM776.375601 878.046872a112.004236 112.004236 0 0 1-67.865892-22.707009l-37.887537-28.70268c-12.756747-9.695127-30.488625-9.56756-43.117804 0l-37.887538 28.70268c-39.928617 30.23349-95.6756 30.361057-135.604217 0l-37.887537-28.70268c-12.756747-9.695127-30.488625-9.56756-43.117804 0l-37.887537 28.70268c-39.928617 30.23349-95.6756 30.361057-135.604217 0l-37.887538-28.70268c-12.756747-9.56756-30.488625-9.56756-43.117804 0l-49.496177 37.504835a38.244726 38.244726 0 1 1-46.179422-60.977249l49.496177-37.504835c39.928617-30.23349 95.6756-30.361057 135.604216 0l37.887538 28.70268c12.756747 9.56756 30.488625 9.56756 43.117804 0l37.887537-28.70268c39.928617-30.23349 95.6756-30.361057 135.604217 0l37.887538 28.70268c12.756747 9.56756 30.488625 9.56756 43.117804 0l37.887537-28.70268c39.928617-30.23349 95.6756-30.361057 135.604217 0l37.887538 28.70268c12.756747 9.56756 30.488625 9.56756 43.117803 0l37.887538-28.70268c39.928617-30.23349 95.6756-30.361057 135.604217 0l37.887537 28.70268a38.244726 38.244726 0 1 1-46.179422 60.977249l-37.887538-28.70268c-12.756747-9.56756-30.488625-9.56756-43.117804 0l-37.887537 28.70268a112.259371 112.259371 0 0 1-67.865893 22.707009zM179.870128 741.294548C80.622639 741.294548 0 660.671909 0 561.42442c0-17.221608 0-69.651837 86.10804-210.231185l93.762088-153.208527 93.762088 153.208527c86.10804 140.706916 86.10804 193.137144 86.10804 210.231185 0 99.247489-80.750206 179.870128-179.870128 179.870128z m0-396.607253l-28.447545 46.434557C83.811826 501.467711 76.54048 547.009297 76.54048 561.42442c0 56.89509 46.30699 103.329648 103.329648 103.329648s103.329648-46.30699 103.329648-103.329648c0-14.415124-7.271346-59.956709-74.882103-170.302568l-28.447545-46.434557zM220.436582 592.16818m-28.319977 0a28.319978 28.319978 0 1 0 56.639955 0 28.319978 28.319978 0 1 0-56.639955 0ZM138.538269 563.97577m-28.319978 0a28.319978 28.319978 0 1 0 56.639955 0 28.319978 28.319978 0 1 0-56.639955 0ZM192.116605 494.834203m-28.319978 0a28.319978 28.319978 0 1 0 56.639955 0 28.319978 28.319978 0 1 0-56.639955 0Z"></path></g></svg>`;      
    setIconSource("DWS-icon", pmc20svg); 
    const pmc21svg = `<svg viewBox="0 -3.5 1031 1031" width="24" fill="#ababab" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" stroke="#ababab"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M164.912221 715.73652c6.70138 3.787737 13.985489 5.535923 21.269597 5.535923 15.296628 0 30.15621-8.158202 38.16873-22.435055l95.421824-171.030872 108.387537 26.80552c19.667093 4.807512 40.062598-4.370465 49.386257-22.435055l68.616304-133.444871 129.948499 16.025039a43.704652 43.704652 0 0 0 39.479869-16.170721l143.642623-180.354532 6.410016 29.864846c4.370465 20.541187 22.580737 34.526675 42.684877 34.526675 3.059326 0 6.118651-0.291364 9.177977-1.019775a43.617243 43.617243 0 0 0 33.5069-51.862854l-25.785745-120.187793-0.437046-1.31114c-0.437047-2.03955-1.165457-3.933419-1.893869-5.827287-0.291364-0.728411-0.582729-1.602504-1.019775-2.330915-0.291364-0.437047-0.437047-1.019775-0.582729-1.456821-0.728411-1.456822-1.602504-2.767961-2.476597-4.079101-0.291364-0.291364-0.437047-0.728411-0.582728-1.019775-1.456822-2.185233-3.205008-4.079101-4.953194-5.827287-0.437047-0.291364-0.728411-0.582729-1.165458-1.019776-1.456822-1.456822-3.205008-2.622279-4.807511-3.787736a9.80441 9.80441 0 0 0-1.602504-1.019775 40.499644 40.499644 0 0 0-6.118651-3.205008c-0.291364-0.145682-0.437047-0.291364-0.728411-0.291364-2.330915-0.874093-4.66183-1.602504-6.992745-2.039551l-2.622279-0.437046c-1.748186-0.291364-3.496372-0.437047-5.39024-0.437047h-3.642055l-119.459382 6.992744c-24.037559 1.456822-42.539195 22.14369-41.082373 46.18125 1.456822 24.037559 22.14369 42.102148 46.181249 41.082373l21.560962-1.31114-124.995305 156.754019-135.921469-16.75345c-18.210272-2.185233-35.837815 7.138427-44.287381 23.45483l-66.722435 129.802817-107.22208-26.514156a43.55897 43.55897 0 0 0-48.657846 21.123916l-111.738228 200.312989c-11.654574 20.832551-4.079101 47.492389 17.044815 59.146962zM87.409304 867.391663V43.704652c0-24.183241-19.521411-43.704652-43.704652-43.704652S0 19.521411 0 43.704652v867.391663c0 24.183241 19.521411 43.704652 43.704652 43.704652h404.705079a116.400057 116.400057 0 0 1 42.393513-82.164746c-1.893868-1.602504-3.642054-3.496372-5.535923-5.244558H87.409304zM813.052212 557.671362l-20.249822-16.170722a171.060009 171.060009 0 0 0-203.226632-8.595248l-49.386257 33.215536a43.646379 43.646379 0 0 0-11.945939 60.603784 43.777493 43.777493 0 0 0 60.603785 11.945938l49.386257-33.215535a84.000341 84.000341 0 0 1 99.792289 4.224783l20.249822 16.170721c31.030303 24.911652 69.344715 37.586001 107.659126 37.586001 34.089629 0 68.179257-10.05207 97.315693-30.15621l49.677621-34.235311c19.812776-13.694124 24.911652-40.936691 11.217527-60.749467a43.733789 43.733789 0 0 0-60.749466-11.217527l-49.677622 34.235311c-30.593257 20.978233-71.966994 19.521411-100.666382-3.642054zM963.396216 707.286954l-49.677622 34.235311a84.859866 84.859866 0 0 1-100.666382-3.642054l-20.249822-16.170722a171.060009 171.060009 0 0 0-203.226632-8.595248l-49.386257 33.215536a43.646379 43.646379 0 0 0-11.945939 60.603784 43.646379 43.646379 0 0 0 60.603785 11.945938l49.386257-33.215535a84.000341 84.000341 0 0 1 99.792289 4.224783l20.249822 16.170721c31.030303 24.911652 69.344715 37.586001 107.659126 37.586001 34.089629 0 68.179257-9.906388 97.315693-30.15621l49.677621-34.235311c19.812776-13.694124 24.911652-40.936691 11.217527-60.749467a43.864903 43.864903 0 0 0-60.749466-11.217527zM963.396216 887.641485l-49.677622 34.235311a84.859866 84.859866 0 0 1-100.666382-3.642054l-20.249822-16.170722a171.060009 171.060009 0 0 0-203.226632-8.595248l-49.386257 33.215536a43.646379 43.646379 0 0 0-11.945939 60.603784 43.777493 43.777493 0 0 0 60.603785 11.945938l49.386257-33.215535a84.000341 84.000341 0 0 1 99.792289 4.224783l20.249822 16.170721c31.030303 24.911652 69.344715 37.586001 107.659126 37.586001 34.089629 0 68.179257-9.906388 97.315693-30.15621l49.677621-34.235311c19.812776-13.694124 24.911652-40.936691 11.217527-60.749466a43.602675 43.602675 0 0 0-60.749466-11.217528z"></path></g></svg>`;      
    setIconSource("PGWFR-icon", pmc21svg); 
    const pmc22svg = `<svg viewBox="0 0 1024 1024" width ="24" fill="#ababab" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" stroke="#ababab"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M859.448932 726.375599a141.83452 141.83452 0 0 1-88.902214-31.03758l-16.721796-13.353377a69.413501 69.413501 0 0 0-82.405977-3.48872l-40.781935 27.428558a36.162389 36.162389 0 0 1-40.180433-60.150347l40.781936-27.428559a141.233016 141.233016 0 0 1 167.81947 7.097741l16.721797 13.353377a70.015005 70.015005 0 0 0 83.12778 3.007518L939.930097 613.533546a36.102239 36.102239 0 1 1 41.022538 59.428544l-41.022538 28.270663a141.593918 141.593918 0 0 1-80.481165 25.142846zM859.448932 875.187559a141.83452 141.83452 0 0 1-88.902214-31.03758l-16.721796-13.353377a69.293201 69.293201 0 0 0-82.405977-3.48872L630.75731 854.134937a36.162389 36.162389 0 0 1-40.180432-60.150348l40.781936-27.428558a141.233016 141.233016 0 0 1 167.81947 7.097741l16.721797 13.353377a70.015005 70.015005 0 0 0 83.12778 3.007517l41.022537-28.270663a36.102239 36.102239 0 1 1 41.022537 59.428543l-41.022537 28.270664a141.473618 141.473618 0 0 1-80.601466 25.744349zM859.448932 1023.999519a141.83452 141.83452 0 0 1-88.902214-31.03758l-16.721796-13.353377a69.293201 69.293201 0 0 0-82.405977-3.48872l-40.781935 27.428559a36.162389 36.162389 0 0 1-40.180433-60.150348l40.781936-27.428559a141.233016 141.233016 0 0 1 167.81947 7.097741l16.721797 13.353378a70.015005 70.015005 0 0 0 83.12778 3.007517l41.022537-28.270663a36.102239 36.102239 0 1 1 41.022538 59.428543l-41.022538 28.270663a141.473618 141.473618 0 0 1-80.481165 25.142846zM964.832341 445.112573H744.080565a17.202999 17.202999 0 0 1-17.3233-17.3233V80.601466a17.202999 17.202999 0 0 0-17.3233-17.3233h-156.390904a17.202999 17.202999 0 0 1-17.3233-17.3233V17.3233A17.202999 17.202999 0 0 0 518.757363 0h-28.150363a17.924804 17.924804 0 0 0-17.804503 17.3233v29.112768a17.202999 17.202999 0 0 1-18.285705 17.323301h-156.390904a17.202999 17.202999 0 0 0-17.3233 17.3233V300.751738a17.202999 17.202999 0 0 1-17.3233 17.3233H44.652323A17.202999 17.202999 0 0 0 27.329023 335.398339v654.195181a17.202999 17.202999 0 0 0 17.3233 17.3233h488.902026a84.210487 84.210487 0 0 1 10.947363-86.014997l17.563901-22.375929-17.563901-22.37593c-1.323308-1.80451-2.646615-3.368419-3.849622-5.052629a84.210487 84.210487 0 0 1-13.954881-43.30825h-69.052599a17.202999 17.202999 0 0 0-17.3233 17.3233V926.315354a17.202999 17.202999 0 0 1-17.3233 17.3233h-60.150348A17.202999 17.202999 0 0 1 345.524362 926.315354V145.32324a17.202999 17.202999 0 0 1 17.3233-17.3233h284.150242a17.202999 17.202999 0 0 1 17.3233 17.3233V552.180192a188.150288 188.150288 0 0 1 46.67667-6.015035c5.774433 0 12.03007 0 17.3233 0.842105v-19.849615a17.202999 17.202999 0 0 1 17.3233-17.3233h172.270596v61.593956a83.368382 83.368382 0 0 1 42.947348-12.03007 84.210487 84.210487 0 0 1 21.774426 2.887217v-99.849577A17.202999 17.202999 0 0 0 964.832341 445.112573zM280.802588 926.315354a17.202999 17.202999 0 0 1-17.3233 17.3233h-28.511265A17.202999 17.202999 0 0 1 217.524422 926.315354v-80.601466a17.202999 17.202999 0 0 0-17.3233-17.3233H171.689857a17.202999 17.202999 0 0 0-17.924804 17.3233V926.315354a17.202999 17.202999 0 0 1-17.3233 17.3233H107.930488A17.202999 17.202999 0 0 1 90.607188 926.315354V399.63891a17.202999 17.202999 0 0 1 17.3233-17.3233h173.353302z m-108.270626-416.721609h28.511265a17.202999 17.202999 0 0 0 17.3233-17.3233v-28.872167a17.202999 17.202999 0 0 0-17.3233-17.3233h-45.834565v45.834565a17.202999 17.202999 0 0 0 16.962398 17.3233z m378.225386-318.43594h-110.075136v45.834565a17.202999 17.202999 0 0 0 17.3233 17.3233h92.751836a17.202999 17.202999 0 0 0 17.3233-17.3233v-28.511265a17.202999 17.202999 0 0 0-17.3233-17.3233zM172.050759 764.150017h28.511265a17.202999 17.202999 0 0 0 17.3233-17.3233V718.195151a17.202999 17.202999 0 0 0-17.3233-17.3233h-45.834565v45.834565a17.202999 17.202999 0 0 0 17.443601 17.443601z m0-127.398437h28.511265a17.202999 17.202999 0 0 0 17.3233-17.3233v-28.511264a17.202999 17.202999 0 0 0-17.3233-17.323301h-45.834565v45.834565a17.202999 17.202999 0 0 0 17.443601 17.203z m539.067416 370.766744zM540.65209 722.886878a84.210487 84.210487 0 0 1-10.466161-21.894726h-89.383417v45.834565a17.202999 17.202999 0 0 0 17.323301 17.3233h92.631535l10.947363-13.83458-17.563901-22.375929c-0.962406-1.80451-2.285713-3.368419-3.48872-5.17293z m10.105258-404.330637h-110.075136v45.834565a17.202999 17.202999 0 0 0 17.3233 17.3233h92.751836a17.202999 17.202999 0 0 0 17.3233-17.3233v-28.511265a17.202999 17.202999 0 0 0-17.3233-17.3233z m0 127.398437h-110.075136v45.834565a17.202999 17.202999 0 0 0 17.3233 17.3233h92.751836a17.202999 17.202999 0 0 0 17.3233-17.3233v-28.390965a17.202999 17.202999 0 0 0-17.3233-17.3233z m0 127.398436h-110.075136v45.834565a17.202999 17.202999 0 0 0 17.3233 17.3233h77.473648a84.210487 84.210487 0 0 1 27.548859-30.676677l4.571426-3.007518v-12.030069a17.202999 17.202999 0 0 0-16.842097-17.3233z"></path></g></svg>`;      
    setIconSource("GWS-icon", pmc22svg); 
    const pmc23svg = `<svg fill="#49c4b1" width="24" viewBox="0 -1.05 48.095 48.095" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" data-name="Слой 1" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M9 0 A 1.0001 1.0001 0 0 0 8 1L8 4.484375L1.4179688 9.1855469 A 1.0001 1.0001 0 0 0 1 10L1 14 A 1.0001 1.0001 0 0 0 2 15L24 15 A 1.0001 1.0001 0 0 0 25 14L25 10 A 1.0001 1.0001 0 0 0 24.582031 9.1855469L18 4.4863281L18 1 A 1.0001 1.0001 0 0 0 17 0L9 0 z M 10 2L16 2L16 5 A 1.0001 1.0001 0 0 0 16.417969 5.8144531L23 10.513672L23 13L3 13L3 10.513672L9.5820312 5.8144531 A 1.0001 1.0001 0 0 0 10 5L10 2 z M 5.5 21C4.8457598 21 4.2978026 21.418077 4.0917969 22L1 22 A 1.0001 1.0001 0 0 0 0 23L0 45 A 1.0001 1.0001 0 0 0 1 46L47.095703 46 A 1.0001 1.0001 0 0 0 48.095703 45L48.095703 23 A 1.0001 1.0001 0 0 0 47.095703 22L21.908203 22C21.702197 21.418077 21.15424 21 20.5 21L5.5 21 z M 2 24L5.5 24L20.5 24L24.095703 24L24.095703 44L2 44L2 24 z M 26.095703 24L46.095703 24L46.095703 30L26.095703 30L26.095703 24 z M 5 26 A 1.0001 1.0001 0 0 0 4 27L4 41 A 1.0001 1.0001 0 0 0 5 42L21 42 A 1.0001 1.0001 0 0 0 22 41L22 27 A 1.0001 1.0001 0 0 0 21 26L5 26 z M 30 26 A 1.0001 1.0001 0 1 0 30 28L42 28 A 1.0001 1.0001 0 1 0 42 26L30 26 z M 6 28L20 28L20 40L6 40L6 28 z M 26.095703 32L46.095703 32L46.095703 44L26.095703 44L26.095703 32 z M 29.984375 34.986328 A 1.0001 1.0001 0 0 0 29 36L29 41 A 1.0001 1.0001 0 1 0 31 41L31 36 A 1.0001 1.0001 0 0 0 29.984375 34.986328 z"></path></g></svg>`;      
    setIconSource("KITCHEN-icon", pmc23svg);
    setIconSource("KLL-icon", pmc23svg);  
    const pmc24svg = `<svg fill="#49c4b1" width="24" viewBox="0 0 64 64" id="Layer_1" version="1.1" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M3,61h58V3H3V61z M5,59V20h54v39H5z M59,5v13H5V5H59z"></path> <path d="M32,23c-9.4,0-17,7.6-17,17s7.6,17,17,17s17-7.6,17-17S41.4,23,32,23z M32,55c-7.8,0-14.2-6-14.9-13.6 c3.2-0.3,4.9,0.4,6.7,1.2c1.5,0.7,3.1,1.4,5.4,1.4c0.7,0,1.6-0.1,2.5-0.2c4.1-0.7,6,0.1,8.1,1c1.5,0.7,3.1,1.4,5.4,1.4 c0.2,0,0.4,0,0.6,0C43.3,51.3,38.1,55,32,55z M46.4,44c-2.6,0.3-4.2-0.3-5.9-1.1c-2.1-1-4.6-2-9.3-1.2c-3.2,0.6-4.8-0.1-6.7-1 c-1.9-0.8-4-1.8-7.6-1.4c0.3-8,6.9-14.4,15-14.4c8.3,0,15,6.7,15,15C47,41.4,46.8,42.8,46.4,44z"></path> <path d="M37,14c1.7,0,3-1.3,3-3s-1.3-3-3-3s-3,1.3-3,3S35.3,14,37,14z M37,10c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S36.4,10,37,10 z"></path> <path d="M45,14c1.7,0,3-1.3,3-3s-1.3-3-3-3s-3,1.3-3,3S43.3,14,45,14z M45,10c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S44.4,10,45,10 z"></path> <path d="M53,14c1.7,0,3-1.3,3-3s-1.3-3-3-3s-3,1.3-3,3S51.3,14,53,14z M53,10c0.6,0,1,0.4,1,1s-0.4,1-1,1s-1-0.4-1-1S52.4,10,53,10 z"></path> </g> </g></svg>`;      
    setIconSource("LAUNDRY-icon", pmc24svg); 
    const pmc25svg = `<svg  width="24" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 16.927 16.927" xml:space="preserve" fill="#49C4B1" stroke="#49C4B1" stroke-width="0.00016927"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path style="fill:#49C4B1;" d="M16.693,2.721c-0.312-0.312-0.815-0.312-1.127,0L14.107,4.18c-0.149,0.149-0.233,0.353-0.233,0.564 v8.729H3.266V4.775c0-0.211-0.084-0.414-0.233-0.564L1.361,2.539c-0.311-0.311-0.816-0.312-1.128,0 c-0.311,0.311-0.311,0.816,0,1.127l1.438,1.439v9.165c0,0.442,0.357,0.798,0.797,0.798H14.67c0.44,0,0.798-0.355,0.798-0.798 V5.074l1.225-1.226C17.005,3.537,17.005,3.033,16.693,2.721z"></path> <path style="fill:#49C4B1;" d="M8.206,6.981c0.629,0.65,1.484,1.287,2.511,1.285c1.028,0.003,1.857-0.695,2.279-1.473 c-0.626,0.638-1.464,1.062-2.258,0.976C9.94,7.681,9.249,7.156,8.661,6.536c-0.331-0.331-0.7-0.639-1.13-0.868 C7.102,5.446,6.609,5.294,6.111,5.32C5.095,5.354,4.274,6.027,3.826,6.794c0.645-0.62,1.479-1.034,2.279-0.978 C6.909,5.874,7.621,6.373,8.206,6.981z"></path> <circle style="fill:#49C4B1;" cx="7.552" cy="2.815" r="0.809"></circle> <circle style="fill:#49C4B1;" cx="9.703" cy="3.786" r="0.333"></circle> <circle style="fill:#49C4B1;" cx="10.987" cy="2.191" r="0.332"></circle> <path style="fill:#49C4B1;" d="M10.205,10.857c0,0.434,0.351,0.782,0.782,0.782s0.782-0.349,0.782-0.782 c0-0.432-0.351-0.782-0.782-0.782S10.205,10.425,10.205,10.857z M11.451,10.857c0,0.257-0.209,0.465-0.464,0.465 s-0.464-0.208-0.464-0.465c0-0.255,0.209-0.463,0.464-0.463S11.451,10.602,11.451,10.857z"></path> <path style="fill:#49C4B1;" d="M5.024,9.421c0,0.65,0.53,1.183,1.181,1.183c0.65,0,1.181-0.532,1.181-1.183 c0-0.649-0.53-1.181-1.181-1.181S5.024,8.772,5.024,9.421z M7.067,9.421c0,0.477-0.387,0.863-0.861,0.863 c-0.476,0-0.863-0.387-0.863-0.863c0-0.474,0.387-0.86,0.863-0.86C6.68,8.561,7.067,8.947,7.067,9.421z"></path> </g> </g> </g></svg>`;      
    setIconSource("DW-icon", pmc25svg); 
    const pmc26svg = `<svg viewBox="0 0 1024 1024" width="24" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M569.581986 391.004438l46.216439 8.677792 71.427275 86.346085-57.238468-10.034982-60.405246-84.988895zM482.762941 534.712372l115.14525 23.750829L739.333578 735.874691l-128.747997-12.276402-127.82264-188.885917zM176.953033 470.482318l136.49015 33.189469L430.069004 707.178344l-162.276764-14.68233-90.839207-222.013696z" fill="#49c4b1"></path><path d="M198.184834 470.482318l110.096913 232.254313-44.077836-8.513284-87.250878-227.627528 21.231801 3.886499z" fill="#49c4b1"></path><path d="M221.647773 285.719381l112.893548 31.328473 54.421271 108.42099-133.83746-29.364661-33.477359-110.384802z" fill="#49c4b1"></path><path d="M240.010968 297.923811l57.022552 98.478543-32.397775-13.253168-42.987972-85.225375h18.363195z" fill="#49c4b1"></path><path d="M980.944277 802.191939q-1.028174 0-2.056348-0.092535l-726.220134-67.787538a21.591662 21.591662 0 0 1-17.787417-12.883025L23.261525 235.369681a21.591662 21.591662 0 0 1 25.478162-29.446915l581.854168 158.606182a21.591662 21.591662 0 0 1 10.363997 6.384962l356.025946 395.230235a21.591662 21.591662 0 0 1-16.039521 36.047794zM269.38591 692.496014l658.494287 61.464265-314.765307-349.435348-532.285881-145.106251z" fill="#49c4b1"></path><path d="M605.074566 560.355041a10.795831 10.795831 0 0 1-2.056349-0.195353l-158.71928-30.845231a10.795831 10.795831 0 0 1-6.991586-4.709039l-57.320722-88.176236a10.795831 10.795831 0 0 1 11.443581-16.45079L546.859332 455.296183a10.795831 10.795831 0 0 1 6.354118 4.194951l60.662289 83.775649a10.795831 10.795831 0 0 1-8.739482 17.129385z m-152.169809-51.408719l127.401088 24.768721-42.206558-58.328333-125.51953-28.429022zM267.802522 410.488343a10.795831 10.795831 0 0 1-9.407796-5.48017l-66.132177-116.841737a10.795831 10.795831 0 0 1 18.795028-10.631323l66.132177 116.841737a10.795831 10.795831 0 0 1-9.387232 16.111493z" fill="#49c4b1"></path><path d="M400.807161 436.264675a10.785549 10.785549 0 0 1-9.068499-4.914674l-66.831335-102.94082A10.795831 10.795831 0 0 1 342.982633 316.677712l66.831335 102.940819a10.795831 10.795831 0 0 1-9.047934 16.676989zM523.519774 463.387915a10.785549 10.785549 0 0 1-8.698356-4.390305l-71.550655-96.997971a10.795831 10.795831 0 0 1 17.376147-12.821335L532.197566 446.227684a10.795831 10.795831 0 0 1-8.677792 17.201358zM636.721774 495.045404a10.775268 10.775268 0 0 1-8.379621-3.979035l-82.336205-101.100387A10.795831 10.795831 0 1 1 562.744627 376.311826l82.336205 101.100388a10.795831 10.795831 0 0 1-8.36934 17.612627z" fill="#49c4b1"></path><path d="M721.926585 517.480169a10.816395 10.816395 0 0 1-2.4779-0.287888L113.216503 374.923791A10.795831 10.795831 0 0 1 118.110613 353.907906l606.273309 142.26849a10.795831 10.795831 0 0 1-2.457337 21.303773zM788.058762 601.173565a10.84724 10.84724 0 0 1-2.190011-0.226199L154.281788 470.90387a10.795831 10.795831 0 0 1 4.359459-21.149547L790.22821 579.797819a10.795831 10.795831 0 0 1-2.169448 21.375746z" fill="#49c4b1"></path><path d="M441.985545 725.72661a10.785549 10.785549 0 0 1-9.397514-5.459606L306.41047 498.458943a10.795831 10.795831 0 1 1 18.764183-10.67245l126.156997 221.808061a10.795831 10.795831 0 0 1-9.346105 16.132056zM610.606144 746.670522a10.785549 10.785549 0 0 1-8.975962-4.781011L461.891001 533.715043a10.795831 10.795831 0 1 1 17.931361-12.02964l139.7289 208.164186a10.795831 10.795831 0 0 1-8.945118 16.820933zM751.681952 757.692552a10.775268 10.775268 0 0 1-8.523565-4.164107L596.551001 565.084644a10.795831 10.795831 0 1 1 17.036849-13.253168L760.195236 740.285559a10.795831 10.795831 0 0 1-8.513284 17.427556zM870.734265 772.015021a10.775268 10.775268 0 0 1-8.297368-3.886499L708.50891 583.437556A10.795831 10.795831 0 0 1 725.093363 569.608611l153.917705 184.701247a10.795831 10.795831 0 0 1-8.276803 17.705163z" fill="#49c4b1"></path><path d="M857.367998 1024H267.79224a21.591662 21.591662 0 0 1-17.417274-34.351306l187.559572-256.015423a21.591662 21.591662 0 0 1 34.834548 25.519288L310.379223 980.816676h496.60823L598.268052 761.21919a21.591662 21.591662 0 1 1 31.297628-29.755367l243.389441 256.015423A21.591662 21.591662 0 0 1 857.367998 1024z" fill="#49c4b1"></path><path d="M418.789931 944.223949a10.795831 10.795831 0 0 1-8.636665-17.263048l93.204008-124.542763A10.795831 10.795831 0 1 1 520.640886 815.34229l-93.204009 124.553045a10.775268 10.775268 0 0 1-8.646946 4.328614zM176.192184 849.220636a23.58632 23.58632 0 0 1-4.822138-0.503806c-13.767255-2.858325-20.830813-17.006004-24.943511-27.400847-17.869671-45.10601-15.833886-101.244332 5.881158-162.359018 16.173183-45.527562 37.281603-77.575758 38.176115-78.912384a10.795831 10.795831 0 0 1 17.993052 11.937105 380.743258 380.743258 0 0 0-35.986104 74.666024c-13.7981 38.998655-26.033376 96.10346-5.983975 146.710203 5.243689 13.232604 9.099343 14.178525 9.25357 14.20937 4.410868 0.925357 16.676989-11.309918 24.007872-18.620238 15.422616-15.422616 34.639195-34.556941 58.184388-33.086652 14.815993 0.925357 28.398177 9.55174 41.517682 26.382955 1.747896 2.231138 7.042995 9.037653 24.933229 5.038054 15.50487-3.464948 35.79075-14.394441 54.267044-29.313251 19.617567-15.813322 28.562684-28.922546 29.590859-33.467077a10.795831 10.795831 0 1 1 21.057011 4.760448C425.318838 767.018093 399.912649 788.609756 392.221904 794.778802c-21.242083 17.119104-44.211499 29.354379-63.099062 33.569894-25.807177 5.768058-39.625841-3.793963-46.668835-12.831617-8.965681-11.505271-17.664036-17.592064-25.838023-18.106151-13.828946-0.863666-28.572966 13.849509-41.599935 26.82507-12.841898 12.821335-25.046328 24.974356-38.823865 24.984638zM532.269538 231.339237a10.795831 10.795831 0 0 1-7.443983-18.609956L686.074145 59.150873a10.795831 10.795831 0 0 1 14.887965 15.638532L539.71352 228.34725a10.764986 10.764986 0 0 1-7.443982 2.991987zM665.099387 231.339237a10.795831 10.795831 0 0 1-7.443983-18.609956L877.931485 2.981706a10.795831 10.795831 0 0 1 14.836557 15.62825l-220.234954 209.747576A10.764986 10.764986 0 0 1 665.099387 231.339237zM781.756053 428.635621a10.795831 10.795831 0 0 1-7.443982-18.609957L958.488949 234.629395a10.795831 10.795831 0 0 1 14.887965 15.638533L789.200036 425.664197a10.764986 10.764986 0 0 1-7.443983 2.971424z" fill="#49c4b1"></path></g></svg>`;      
    setIconSource("SH-icon", pmc26svg); 
   
   
    //HVAC ICONS
    const pmc27svg = `<svg fill="#49c4b1" width="30" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M 12 6.59375 L 11.28125 7.28125 L 3.28125 15.28125 L 2.59375 16 L 3.28125 16.71875 L 11.28125 24.71875 L 12 25.40625 L 12.71875 24.71875 L 16.71875 20.71875 L 17.40625 20 L 16.71875 19.28125 L 11.71875 14.28125 L 10.28125 15.71875 L 14.5625 20 L 12 22.5625 L 5.4375 16 L 12 9.4375 L 13.28125 10.71875 L 14.71875 9.28125 L 12.71875 7.28125 Z M 20 6.59375 L 19.28125 7.28125 L 15.28125 11.28125 L 14.59375 12 L 15.28125 12.71875 L 20.28125 17.71875 L 21.71875 16.28125 L 17.4375 12 L 20 9.4375 L 26.5625 16 L 20 22.5625 L 18.71875 21.28125 L 17.28125 22.71875 L 19.28125 24.71875 L 20 25.40625 L 20.71875 24.71875 L 28.71875 16.71875 L 29.40625 16 L 28.71875 15.28125 L 20.71875 7.28125 Z"></path></g></svg>`;      
    setIconSource("CWS-icon", pmc36svg); 
    const pmc28svg = `<svg version="1.1" width="24" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path style="fill:#49c4b1;" d="M465.94,475.301h-70.358c-7.484,0-13.553-6.068-13.553-13.553s6.069-13.553,13.553-13.553h70.358 c10.452,0,18.955-8.503,18.955-18.955V182.167c0-10.452-8.503-18.955-18.955-18.955H137.925c-10.452,0-18.955,8.503-18.955,18.955 v247.073c0,10.452,8.503,18.955,18.955,18.955h182.984c7.484,0,13.553,6.068,13.553,13.553s-6.069,13.553-13.553,13.553H137.925 c-25.398,0-46.06-20.663-46.06-46.06V182.167c0-25.398,20.663-46.06,46.06-46.06H465.94c25.398,0,46.06,20.663,46.06,46.06v247.073 C512,454.637,491.337,475.301,465.94,475.301z"></path> <path style="fill:#f0f0f0;" d="M190.663,411.956L190.663,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118 c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C214.333,401.304,203.68,411.956,190.663,411.956 z"></path> <path style="fill:#49c4b1;" d="M190.663,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118 c0-20.524,16.697-37.221,37.223-37.221s37.223,16.697,37.223,37.221v165.167C227.884,408.811,211.187,425.508,190.663,425.508z M190.663,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117 V223.118C200.779,217.541,196.241,213.004,190.663,213.004z"></path> <path style="fill:#f0f0f0;" d="M301.932,411.956L301.932,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118 c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C325.601,401.304,314.95,411.956,301.932,411.956 z"></path> <path style="fill:#49c4b1;" d="M301.931,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118 c0-20.524,16.697-37.221,37.223-37.221c20.526,0,37.223,16.697,37.223,37.221v165.167 C339.154,408.811,322.457,425.508,301.931,425.508z M301.931,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166 c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117V223.118C312.048,217.541,307.509,213.004,301.931,213.004z"></path> <path style="fill:#f0f0f0;" d="M413.202,411.956L413.202,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118 c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C436.87,401.304,426.219,411.956,413.202,411.956 z"></path> <g> <path style="fill:#49c4b1;" d="M413.202,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118 c0-20.524,16.697-37.221,37.223-37.221s37.223,16.697,37.223,37.221v165.167C450.424,408.811,433.726,425.508,413.202,425.508z M413.202,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117 V223.118C423.319,217.541,418.78,213.004,413.202,213.004z"></path> <path style="fill:#49c4b1;" d="M105.416,230.486H58.277c-7.484,0-13.553-6.068-13.553-13.553c0-7.485,6.069-13.553,13.553-13.553 h47.139c7.484,0,13.553,6.068,13.553,13.553C118.969,224.418,112.901,230.486,105.416,230.486z"></path> <path style="fill:#49c4b1;" d="M105.416,408.027H58.277c-7.484,0-13.553-6.068-13.553-13.553c0-7.485,6.069-13.553,13.553-13.553 h47.139c7.484,0,13.553,6.068,13.553,13.553C118.969,401.959,112.901,408.027,105.416,408.027z"></path> <path style="fill:#49c4b1;" d="M47.435,251.51c-7.484,0-13.553-6.068-13.553-13.553V92.943c0-7.485,6.069-13.553,13.553-13.553 s13.553,6.068,13.553,13.553v145.014C60.987,245.442,54.918,251.51,47.435,251.51z"></path> <path style="fill:#49c4b1;" d="M47.435,475.301c-7.484,0-13.553-6.068-13.553-13.553V305.703c0-7.485,6.069-13.553,13.553-13.553 s13.553,6.068,13.553,13.553v156.045C60.987,469.234,54.918,475.301,47.435,475.301z"></path> </g> <rect x="13.553" y="50.253" style="fill:#f0f0f0;" width="67.764" height="73.185"></rect> <path style="fill:#49c4b1;" d="M81.317,136.989H13.553C6.069,136.989,0,130.922,0,123.436V50.252 c0-7.485,6.069-13.553,13.553-13.553h67.764c7.484,0,13.553,6.068,13.553,13.553v73.185C94.869,130.922,88.8,136.989,81.317,136.989 z M27.106,109.884h40.658V63.804H27.106V109.884z"></path> </g></svg>`;      
    setIconSource("HL-icon", pmc28svg); 
    const pmc29svg = `<svg viewBox="0 0 24 24" width="24" id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><defs><style>.cls-1{fill:none;stroke:#49c4b1;stroke-miterlimit:10;stroke-width:1.92px;}</style></defs><path class="cls-1" d="M.5,3.4c1.92,0,1.92.95,3.83.95S6.25,3.4,8.16,3.4s1.92.95,3.83.95,1.92-.95,3.83-.95,1.92.95,3.84.95,1.92-.95,3.84-.95"></path><path class="cls-1" d="M.5,9.15c1.92,0,1.92.95,3.83.95s1.92-.95,3.83-.95,1.92.95,3.83.95,1.92-.95,3.83-.95,1.92.95,3.84.95,1.92-.95,3.84-.95"></path><path class="cls-1" d="M.5,14.9c1.92,0,1.92.95,3.83.95s1.92-.95,3.83-.95,1.92.95,3.83.95,1.92-.95,3.83-.95,1.92.95,3.84.95,1.92-.95,3.84-.95"></path><path class="cls-1" d="M.5,20.65c1.92,0,1.92,1,3.83,1s1.92-1,3.83-1,1.92,1,3.83,1,1.92-1,3.83-1,1.92,1,3.84,1,1.92-1,3.84-1"></path></g></svg>`;      
    setIconSource("HUMID-icon", pmc29svg); 
    const pmc30svg = `<svg fill="#49c4b1" width="24" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M522.267 910.508c16.962 0 30.72-13.758 30.72-30.72v-736.43c0-16.962-13.758-30.72-30.72-30.72H143.356c-16.962 0-30.72 13.758-30.72 30.72v736.43c0 16.962 13.758 30.72 30.72 30.72h378.911zm0 40.96H143.356c-39.583 0-71.68-32.097-71.68-71.68v-736.43c0-39.583 32.097-71.68 71.68-71.68h378.911c39.583 0 71.68 32.097 71.68 71.68v736.43c0 39.583-32.097 71.68-71.68 71.68zm388.62-678.049v500.265c0 49.412-40.054 89.467-89.467 89.467-49.443 0-89.498-40.054-89.498-89.467 0-11.311-9.169-20.48-20.48-20.48s-20.48 9.169-20.48 20.48c0 72.034 58.393 130.427 130.427 130.427 72.065 0 130.458-58.393 130.458-130.427V273.419c0-11.311-9.169-20.48-20.48-20.48s-20.48 9.169-20.48 20.48z"></path><path d="M731.92 779.436V368.648c0-11.311-9.169-20.48-20.48-20.48s-20.48 9.169-20.48 20.48v410.788c0 11.311 9.169 20.48 20.48 20.48s20.48-9.169 20.48-20.48z"></path><path d="M731.943 365.513v-34.499c0-49.414-40.053-89.467-89.467-89.467-49.415 0-89.477 40.054-89.477 89.467v34.499c0 11.311 9.169 20.48 20.48 20.48s20.48-9.169 20.48-20.48v-34.499c0-26.789 21.722-48.507 48.517-48.507 26.792 0 48.507 21.715 48.507 48.507v34.499c0 11.311 9.169 20.48 20.48 20.48s20.48-9.169 20.48-20.48zM942.5 254.981L767.785 80.266c-7.998-7.998-20.965-7.998-28.963 0s-7.998 20.965 0 28.963l174.715 174.715c7.998 7.998 20.965 7.998 28.963 0s7.998-20.965 0-28.963zM438.84 281.52c5.657 0 10.24-4.583 10.24-10.24V225.2c0-5.657-4.583-10.24-10.24-10.24H225.541a10.238 10.238 0 00-10.24 10.24v46.08c0 5.657 4.583 10.24 10.24 10.24H438.84zm0 40.96H225.541c-28.278 0-51.2-22.922-51.2-51.2V225.2c0-28.278 22.922-51.2 51.2-51.2H438.84c28.278 0 51.2 22.922 51.2 51.2v46.08c0 28.278-22.922 51.2-51.2 51.2z"></path><path d="M928.972 358.832h-48.978c-11.309 0-20.48-9.171-20.48-20.48V191.091c0-11.311-9.169-20.48-20.48-20.48s-20.48 9.169-20.48 20.48v147.261c0 33.931 27.509 61.44 61.44 61.44h48.978c11.311 0 20.48-9.169 20.48-20.48s-9.169-20.48-20.48-20.48z"></path></g></svg>`;      
    setIconSource("FS-icon", pmc30svg); 
    const pmc31svg = `<svg fill="#49c4b1"  width="24" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path d="M494.246,119.123H17.754C7.964,119.123,0,127.087,0,136.877v109.96c0,9.79,7.964,17.754,17.754,17.754h4.566l32.66,48.991 v15.725c0,14.842,12.075,26.917,26.917,26.917h6.047c28.161,22.345,93.371,36.653,168.056,36.653s139.895-14.309,168.056-36.653 h6.047c14.842,0,26.917-12.075,26.917-26.917v-15.725l32.66-48.991h4.566c9.79,0,17.754-7.964,17.754-17.754v-109.96 C512,127.087,504.036,119.123,494.246,119.123z M42.969,264.591H82.47v37.799H68.168L42.969,264.591z M439.839,329.307 c0,5.369-4.367,9.736-9.736,9.736h-91.63c-4.744,0-8.591,3.846-8.591,8.591s3.846,8.591,8.591,8.591h49.426 C356.37,368.162,307.622,375.696,256,375.696s-100.37-7.533-131.899-19.472h177.714c4.744,0,8.591-3.846,8.591-8.591 s-3.846-8.591-8.591-8.591H81.897c-5.369,0-9.736-4.367-9.736-9.736v-9.736h367.678V329.307z M99.651,302.389v-37.799h19.472 v37.799H99.651z M136.304,302.389v-37.799h19.472v37.799H136.304z M172.958,302.389v-37.799h19.472v37.799H172.958z M209.611,302.389v-37.799h19.472v37.799H209.611z M246.264,302.389v-37.799h19.472v37.799H246.264z M282.917,302.389v-37.799 h19.472v37.799H282.917z M319.57,302.389v-37.799h19.472v37.799H319.57z M356.224,302.389v-37.799h19.472v37.799H356.224z M392.877,302.389v-37.799h19.472v37.799H392.877z M443.832,302.389H429.53v-37.799h39.501L443.832,302.389z M494.819,246.837 c0,0.316-0.257,0.573-0.573,0.573H17.754c-0.316,0-0.573-0.257-0.573-0.573v-109.96c0-0.316,0.257-0.573,0.573-0.573h476.492 c0.316,0,0.573,0.257,0.573,0.573V246.837z"></path> </g> </g> <g> <g> <path d="M291.555,185.696c-0.805-4.674-5.247-7.812-9.925-7.006c-4.676,0.806-7.812,5.249-7.006,9.926 c0.183,1.061,0.276,2.151,0.276,3.242c0,10.421-8.478,18.899-18.899,18.899s-18.899-8.478-18.899-18.899 c0-10.421,8.478-18.899,18.899-18.899c0.937,0,1.877,0.069,2.795,0.204c4.694,0.693,9.06-2.55,9.753-7.244 c0.693-4.694-2.55-9.06-7.244-9.753c-1.746-0.258-3.531-0.388-5.306-0.388c-19.895,0-36.081,16.186-36.081,36.081 s16.186,36.081,36.081,36.081s36.081-16.186,36.081-36.081C292.079,189.79,291.903,187.718,291.555,185.696z"></path> </g> </g> </g></svg>`;      
    setIconSource("SM-icon", pmc31svg); 
    const pmc32svg = `<svg fill="#49c4b1" width="30" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" stroke="#49c4b1"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M 12 6.59375 L 11.28125 7.28125 L 3.28125 15.28125 L 2.59375 16 L 3.28125 16.71875 L 11.28125 24.71875 L 12 25.40625 L 12.71875 24.71875 L 16.71875 20.71875 L 17.40625 20 L 16.71875 19.28125 L 11.71875 14.28125 L 10.28125 15.71875 L 14.5625 20 L 12 22.5625 L 5.4375 16 L 12 9.4375 L 13.28125 10.71875 L 14.71875 9.28125 L 12.71875 7.28125 Z M 20 6.59375 L 19.28125 7.28125 L 15.28125 11.28125 L 14.59375 12 L 15.28125 12.71875 L 20.28125 17.71875 L 21.71875 16.28125 L 17.4375 12 L 20 9.4375 L 26.5625 16 L 20 22.5625 L 18.71875 21.28125 L 17.28125 22.71875 L 19.28125 24.71875 L 20 25.40625 L 20.71875 24.71875 L 28.71875 16.71875 L 29.40625 16 L 28.71875 15.28125 L 20.71875 7.28125 Z"></path></g></svg>`;      
    setIconSource("CFD-icon", pmc32svg); 
    const pmc33svg = `<svg viewBox="0 0 45 45" width="34" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M22.653 8C28.238 8 33.059 11.27 35.306 16H10C12.247 11.27 17.068 8 22.653 8Z" stroke="#49c4b1" stroke-width="2" stroke-linejoin="round"></path> <path d="M22.653 16V37" stroke="#49c4b1" stroke-width="2"></path> <path d="M34.653 37V21" stroke="#49c4b1" stroke-width="2"></path> <path d="M34.653 30H27.653C27.101 30 26.653 30.448 26.653 31V37" stroke="#49c4b1" stroke-width="2"></path> <path d="M10.653 37V21" stroke="#49c4b1" stroke-width="2"></path> <path d="M10.653 30H17.653C18.205 30 18.653 30.448 18.653 31V37" stroke="#49c4b1" stroke-width="2"></path> <path d="M13.653 26H31.653" stroke="#49c4b1" stroke-width="2"></path> </g></svg>`;      
    setIconSource("OUTPROP-icon", pmc33svg); 
    const pmc39svg = `<svg viewBox="0 0 1024 1024" width="24" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M624.9 351.1c176.7-93.5 336.4 13.9 336.4 190.1 0 152.8-101.1 209-211.6 135.3-35.2-24.4-58.1-40.2-74.7-50.9 91.4 175.8-15.8 334.2-191.3 334.2-152.8 0-209-101.1-135.3-211.6 25.6-36.9 41.7-60.3 52.4-77.1-177.2 94.8-337.6-12.7-337.6-189.3 0-152.8 101.1-209 211.6-135.3 35.5 24.6 58.5 40.4 75.1 51.1-91.2-175.7 16-333.9 191.4-333.9 152.8 0 209 101.1 135.3 211.6-25 36-41 59.2-51.7 75.8z" fill="#49c4b1"></path><path d="M513.2 609.8c54.1 0 98-43.9 98-98s-43.9-98-98-98-98 43.9-98 98 43.9 98 98 98zM472.4 655.9c-10.6 26.5-28 52.7-77.4 123.4-48.6 72.8-19.9 124.5 88.7 124.5 146.9 0 227.6-137.2 117.2-291.8 0 0-51.3 25.7-87.8 25.7-11.6 0-22.9-1.6-33.6-4.5-1.7 7.7-4.1 15.2-7.1 22.7zM367 470.4c-26.5-10.6-52.7-28-123.4-77.4-72.8-48.6-124.5-19.9-124.5 88.7 0 147 137.2 227.6 291.8 117.2 0 0-23.7-50.8-23.7-87.2 0-11.7 1.6-23 4.6-33.7-8.4-1.8-16.6-4.3-24.8-7.6zM552.6 367.5c10.6-26.5 28-52.7 77.4-123.4 48.6-72.8 19.9-124.5-88.7-124.5-147 0-227.6 137.2-117.2 291.8 0 0 52.9-25.7 89.2-25.7 11.1 0 21.9 1.4 32.2 4.2 1.7-7.5 4.1-14.9 7.1-22.4zM613.5 424s25.7 50.6 25.7 87.8c0 11.6-1.6 22.9-4.5 33.6 7.7 1.8 15.2 4.2 22.7 7.2 26.5 10.6 52.7 28 123.4 77.4 72.8 48.6 124.5 19.9 124.5-88.7 0-147-137.2-227.7-291.8-117.3z" fill="#FFFFFF"></path></g></svg>`;      
    setIconSource("CL-icon", pmc39svg); 
    
    //SUSTAINABILITY ICONS
    const pmc34svg = `<svg  width="28" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <circle style="fill:#ffffff;" cx="256" cy="256" r="256"></circle> <path style="fill:#49c4b1;" d="M256,145.224c61.177,0,110.776,49.6,110.776,110.776S317.177,366.776,256,366.776 S145.224,317.177,145.224,256S194.823,145.224,256,145.224z"></path> <path style="fill:#49c4b1;" d="M256,145.224c43.868,0,81.777,25.481,99.71,62.482c2.724,10.045,4.143,20.6,4.143,31.496 c0,66.852-54.196,120.991-120.991,120.991c-9.931,0-19.579-1.192-28.829-3.462c-38.193-17.479-64.752-56.012-64.752-100.788 c0-61.177,49.6-110.776,110.776-110.776L256,145.224z"></path> <path style="fill:#F7F9F7;" d="M325.235,169.513c20.6,16.514,35.185,40.179,39.895,67.306c-0.341-0.511-0.681-1.192-1.022-2.157 c-2.156,0.738-2.213,0.738-4.767,1.192l-0.114,0.17c-1.021,1.419,0.057,0.851-1.759,2.327c-2.1,1.816-3.518,4.256-5.902,5.675 c-0.284,2.554,0.227,3.121-0.397,6.129c-0.227,1.135-1.476,4.086-2.951,3.859c-0.454-0.057-2.44-4.937-2.894-6.243 c-0.794-2.27-1.646-3.973-2.213-6.583c-0.341-1.419-0.511-4.086-0.851-4.994c-1.532,0.227-1.475,1.192-2.894,0.17 c-1.022-0.738-0.568-1.192-1.135-2.327c-1.192-1.135-2.44-2.27-3.689-3.405c-0.965-0.284-4.654,0.227-6.186,0.057 c-2.781-0.284-3.065-0.113-4.71-2.327c-2.951,0.17-2.724,1.249-5.562-1.249c-1.873-1.589-1.532-4.143-4.256-2.724 c-0.113,2.327,1.021,2.838,2.043,3.916c0.738,0.851,1.646,1.419,2.043,2.497c0.057,0.057,0.227,1.078,0.227,1.192 c2.667,0.17,3.292-1.078,4.767-2.157c1.419,1.305,0.057,1.589,2.1,2.611c1.646,0.851,1.305,0.34,2.384,1.702 c0.511,1.816-3.632,6.64-5.051,7.548c-1.078,0.681-1.646,0.284-2.611,1.078c-1.419,1.192,0.17,1.021-2.327,1.93 c-2.667,0.965-5.278,3.008-8.059,3.178c-0.624-1.646-1.192-3.348-1.816-4.994c-1.759-5.732-1.702-3.519-3.518-6.47 c-0.851-1.305-0.511-2.1-1.078-3.235c-0.397-0.851-0.965-1.249-1.532-2.27c-0.795-1.646-1.759-4.143-3.632-3.916 c-0.397,1.249,1.759,5.618,2.27,6.64c0.511,1.078,1.362,1.532,1.646,3.008c0.34,2.043-0.057,1.816,1.078,3.178 c2.384,2.894-0.113,2.384,3.575,5.164c2.781,2.1,2.043,2.724,3.235,5.562c1.816,0.511,7.207-1.873,8.115-1.192 c1.078,1.986-1.249,5.108-1.873,6.81c-1.986,5.732-5.448,5.618-8.115,9.988c-1.475,2.383-2.1,2.667-3.462,5.505 c-1.532,3.235,3.065,12.088,0.341,15.833c-0.624,0.851-2.554,1.362-4.994,3.973c-2.611,2.781,0.057,2.327-0.908,7.037 c-0.794,1.078-1.759,1.135-2.667,1.93c-0.341,1.078-0.057,1.986-0.681,3.348c-0.624,1.646-0.738,0.738-1.646,2.1 c-0.681,1.022-0.624,1.476-1.362,2.44c-0.681,0.908-1.021,1.135-1.646,1.702c-3.065,2.838-9.704,2.951-10.272,2.554 c-1.589-1.305-0.511-1.703-0.908-3.575c-0.397-1.646-1.249-3.008-1.986-4.313l-0.057-0.113c-0.341-0.624-0.681-1.249-0.851-1.816 c-1.249-4.029-0.794-7.094-3.065-11.18c-2.781-5.278,1.532-8.059,1.362-11.01c-0.057-0.794-0.34-1.249-0.397-1.93 c-0.511-3.292-0.851-6.243-3.065-8.853c-2.44-2.837-2.1-1.816-1.305-6.47c0.965-5.335-1.249-3.973-4.483-4.086 c-1.589-4.824-4.597-2.497-7.661-1.022c-1.93,0.851-2.611-0.227-4.767,0.057c-4.824,0.681-1.021,2.724-7.491-2.384 c-2.667-2.157-0.908-1.021-2.497-3.689c-0.511-0.965-2.157-2.27-2.894-3.235c-2.44-3.065,0.454-6.186,0.057-9.704 c-0.738-6.526-1.816-0.851,1.816-8.74c1.93-4.2,4.824-4.256,5.562-6.129c0.624-1.703,0.227-2.894,1.419-4.427 c1.078-1.249,2.611-1.022,3.178-2.951c0.851-2.44-0.795-2.724-2.554-2.781c-0.738-2.554-0.738-1.873-0.17-4.256 c0.34-1.305,0.057-1.93,0.34-3.235c0.738-3.292,6.299,0,7.888-1.362c0.738-1.419,0.851-2.781,0-4.086 c-0.908-1.305-2.043-1.135-2.667-2.44c1.362-0.908,0.34-0.113,1.532-0.34c1.362-0.284,1.192-0.738,2.837-1.021 c1.476-0.284,2.384-1.646,3.802-2.554c2.043-1.305,1.078-2.497,3.518-2.894c3.916-0.681,1.362-0.568,1.816-4.256 c0.624-0.227,1.192-0.511,1.759-0.738c1.249,1.646-0.34,0.965,1.192,2.043c0.397-0.227,0.851-0.454,1.249-0.681 c-0.227-1.759-1.022-1.419-1.532-3.632c-1.93,0.284-2.667,1.986-4.2,1.362c-1.532-0.568-1.589-2.781-1.532-4.597 c0.568-1.362,3.405-2.1,4.483-2.44c1.759-0.624,1.532-1.816,3.178-3.405c2.1-2.157,0.568,0,1.589-2.724 c2.327-0.113,1.249-0.17,2.611-0.908l0.057-0.057l0.17-0.057c0.794-0.397,1.873-0.454,2.951-0.851 c3.916-1.305,5.505-0.681,8.342,0.511c2.213,0.908,8.853,0.965,9.307,3.746c-1.589,1.646-3.121,0.454-5.448,0.624 c0.397,2.157,0.624,2.157,2.554,2.724c0.34-1.022-0.113-0.624,0.397-1.249c0.624,0.113,1.305,0.227,1.93,0.34 c0.624-2.213,1.362-1.873,3.575-2.157c-0.34-1.532-0.738-1.078,0.057-2.27c2.213,0.227,0.397,0.057,1.532,1.816 c1.532-0.17,3.064-1.93,5.221-2.156c1.362-0.114,1.249,0.397,3.178,0.17c1.589-0.17,1.475-0.738,3.065-0.057 c0.568-1.078,0-1.021,1.362-1.305c2.1-0.34,3.973,0.908,6.016,1.249c-1.532-1.873-2.951-1.532-1.078-4.654 c2.384-0.511,2.611-0.113,3.632,1.646c0.568-0.34,0.851-0.681,1.135-0.851L325.235,169.513z M147.891,232.108 c4.994-22.7,16.912-42.79,33.483-57.942c1.305,0.454,3.008,0.17,4.256,0.114c0.454-0.851,0.738-1.589,1.532-1.93 c0.34-0.113,0.738-0.113,1.249-0.113c0.057,0.397,0.17,0.851,0.284,1.249c0,0.057,0.057,0.34,0.057,0.284 c0.057-0.057,0.057,0.17,0.114,0.227c2.213-1.305,0.34-1.305,1.532-3.689c-1.873-0.34-1.646-0.17-2.781-1.362 c1.135-1.249,3.348-1.703,4.994-1.532c-0.113,1.135-0.624,1.078-0.227,2.043c1.249-0.794,2.156-2.894,4.2-2.554 c0.397,0.284,0.851,0.568,1.249,0.795c-1.078,1.021-2.667,1.078-4.029,1.646c-0.624,6.186,1.93,1.021,1.078,5.221 c1.532-0.113,3.008-1.248,3.575-2.383c-0.568-0.738-1.362-0.738-1.816-1.646c0.34-1.135,1.135-1.986,2.213-2.497 c0.738-0.34,1.589-0.511,2.611-0.511c11.293,0.114,5.902,0.624,9.421,2.213c0.795,0.34,2.157,0.511,2.611,1.192 c0.738,1.078,0.057,2.1,1.192,2.951c0.965,0.738,1.135,0,2.44,1.646c-0.284,0.908-0.965,1.873-2.327,1.93 c-1.93,0-0.794-1.305-2.838-1.078c0.057,1.93,1.93,2.667,0.17,3.746c-1.532,0.908-0.568-0.34-1.759,0.284 c-0.057,0.057-0.113,0.057-0.17,0.113s-0.114,0.114-0.17,0.17c-0.227,0.227-0.397,0.397-0.567,0.624 c-2.838-0.795-2.327-0.397-4.029-2.327c-0.624-0.738-0.738-0.908-1.873-0.794c-0.738,0-1.646,0.34-2.327-0.284 c1.362-1.759,2.043-0.057,4.086-1.078c0.341-0.17,2.611-1.873,2.951-2.327c-0.624-1.362-0.057-0.227-0.965-1.135 c-1.986-1.986-2.554-1.532-5.221-1.532c-1.249,1.476-2.213,3.235-3.575,4.029c-0.851,0.454-1.816,0.567-3.121,0 c0.624,2.44,2.157,0.567,2.327,3.519c-1.021-0.227-1.589-0.738-2.611-0.34c-2.27,0.851-0.227,0.794-0.057,1.249 c0,0,1.078,0.113,0,0.567c-1.192,0.397-0.17-0.227-2.44-1.589c0.34-0.567,0.624-1.135,0.965-1.759 c-1.816,0.568-4.143,1.475-6.299,2.554c-2.44,1.192-4.767,2.611-6.129,3.916c-0.057,2.157,0.34,0.738,0.568,3.235 c3.292,0.17,2.213,1.192,5.505,2.1c0.624,0.17,1.476,0.34,2.44,0.511c0,1.589-1.419,2.781-0.454,4.427 c2.327,1.589,2.383-1.532,2.951-3.575c7.832-1.646,4.029-3.916,6.072-8.229c0.284-0.624,0.738-1.305,1.362-2.043 c0.624,0.057,3.065,0.284,3.575,0.397c1.759,0.284,0.794,0.738,2.724,1.589c-0.057,1.532-0.794,3.519,1.476,3.178 c1.759-0.284,1.362-1.702,3.462-2.043c0.965,2.27,0.681,3.235,1.135,5.902c5.108,1.986,2.838,3.632,1.816,7.321 c0.624,0.284,1.305,0.624,1.986,0.851c-0.057,1.078-0.057,2.157-0.113,3.178c-0.113,0-5.448-1.192-5.845-1.249 c0.794-2.327,2.327-2.383,3.292-4.767c-1.93,0.34-1.759,0.908-3.178,1.362c-1.249,0.397-2.213,0.114-3.519,0.284 c-0.454,1.532-0.057-1.362,0.113,0.624c0.057,0.738,0.397,0.057-0.057,0.851c-1.759-0.851-1.192-2.781-4.483-0.965 c0.738,0.34,1.476,0.624,2.27,0.965c-0.113,2.157-0.284,0.511-0.738,1.986c-1.135,3.746,3.064,1.419,4.2,1.192 c-0.284,1.986-1.476,1.986-3.178,2.497c-1.873,0.568-2.44,1.362-3.916,1.702c0-2.327-0.34-0.397,0.681-1.986 c-1.476,0.113-2.611,0.851-4.029,1.419l-0.17,0.057c-1.816,0.738-2.1,0.851-2.327,3.178c-1.532,0.454-3.348,1.021-4.483,2.156 c-1.078,1.022-2.213,2.1-3.292,3.121c-0.114,0.114-0.17,0.17-0.227,0.227c0.397,2.951,0,3.008-1.759,4.143 c-1.475,0.965-1.986,0.908-3.348,2.157c-4.427,3.973-2.327,2.1-2.043,8.967c-0.908-0.284-1.816-0.624-2.667-0.908 c-0.681-4.54,0.227-3.008-3.405-4.086c-3.916-1.135-3.405,0.795-5.051,1.135c-1.816,0.397-2.724-1.646-5.335,0.057 c-1.475,0.965-2.837,1.646-3.178,3.405c-0.397,2.157-1.362,3.689-1.248,6.072c0.227,6.413,6.072,6.753,7.548,3.802 c0.965-1.986,0.738-3.065,3.973-2.554c0.34,1.702-0.17,2.951-0.624,4.256c-0.284,0.795-1.078,2.157-0.681,3.235 c2.327,0.908,2.383-0.851,5.448,0.965c0.227,3.008-1.362,6.47,0.965,8.229c1.816,1.305,1.93,0.113,3.519-0.114 c1.759-0.284,1.476,0.795,3.065,1.021c0.908-1.135,0.511-0.397,1.135-1.816c1.078-2.384,1.362-1.249,3.859-2.724 c0.227-0.113,0.454-0.284,0.738-0.454c0.284,0.624,0.624,1.192,0.908,1.759c1.873-2.213,2.043-0.057,4.2,0.568 c0.908,0.227,1.589,0.34,2.043,0.34c1.532,0,1.703-0.738,3.802,0c0.227,0.114,0.568,0.227,0.851,0.284 c0.057,0,0.113,0.057,0.113,0.113c0.057,0,0.17,0.114,0.17,0.17c0.34,0.397,0.397,0.794,0.681,1.192 c1.476,1.419,2.894,2.781,4.313,4.143c2.781,1.135,2.781-0.965,6.016,2.1c1.362,1.305,0.738,1.249,1.475,2.894 c0.114,0.284,0.34,0.511,0.454,0.851c0.284,0.794,0.624,1.532,0.908,2.27c1.475,1.93,3.462,0.738,5.448,2.667 c1.192,1.135,0.284,0.795,2.894,1.249c4.029,0.681,2.44,0.284,5.505,2.611c1.192,0.851,1.476,0.341,2.554,1.078 c1.532,2.156,1.135,4.427-0.113,6.299c-3.916,5.732-2.611,4.824-2.781,9.364c-0.17,2.611-0.908,8.002-3.348,8.683 c-8.91,2.497-3.746,4.256-6.072,8.626c-0.681,1.249-1.192,1.589-1.589,2.554c-1.759,4.143-0.511,5.561-5.789,4.597 c0.511,0.851,0.17,0.284,0.681,1.078c1.532,2.44,1.816,4.256-1.362,4.824c-2.667,0.511-1.532,0-1.759,2.951 c-1.022,0.397-1.476,0-2.157,0.681c0.908,1.703,0.057,0.284,1.646,1.249c-0.284,0.908-0.511,1.873-0.738,2.724 c-0.624,2.213-0.795,0.17-0.965,2.781c0.908,0.397,1.589,0.34,2.383,1.475c-0.113,0.851-0.965,3.178-1.192,4.483 c1.305,1.986,2.384,4.086,5.164,4.256c-0.057,1.646,0.34,1.475-1.078,1.816c-1.192,0.284-3.746-0.851-4.824-1.419 c-1.816-1.022-3.519-2.327-4.767-4.2c-0.681-1.078-0.397-0.568-1.192-1.532c-1.362-1.759-0.794-2.554-1.192-3.689 c-0.227-0.681-1.305-1.419-0.851-3.632c0.113-0.624,1.078-3.632-0.114-3.121c-1.192,0.511,0.908,0.284-0.738,1.078 c-0.397-1.078-0.738-2.667-0.908-4.029c-0.397-2.27-0.965-2.327-1.192-3.689c-0.511-3.178,0.795-3.519-0.681-8.74 c-0.965-3.462-0.568-11.691-1.646-15.947c-0.17-0.681-0.34-1.249-0.624-1.702c-0.965-1.589-3.292-2.327-5.164-3.632 c-0.114,0-0.17-0.057-0.227-0.113c-2.611-1.816-5.051-8.967-7.094-11.634c-0.965-1.305-1.532-0.738-1.986-2.724 c-0.454-1.873,0.227-1.532,0.851-3.065c-3.178-5.789,4.086-5.732,2.611-12.655c-0.34-1.248-1.249-3.064-2.043-3.632 c-1.476,0.681-0.795,1.022-1.589,2.27c-1.192-0.681-2.384-1.362-3.575-2.043c-3.632-3.519-1.703-0.965-2.724-3.292 c-2.213-4.824-4.313-2.1-6.924-4.54c-1.192-1.021-1.362-2.554-3.348-2.27c-2.951,0.397-1.305,0.851-4.37-0.568 c-2.611-1.192-5.278-2.667-7.094-4.313c-0.114-3.462,0.965-3.121-1.646-6.299V232.108z M182.622,173.088 c0.681-0.568,1.362-1.192,2.043-1.759l0.057,0.114c0.114,0.227,0.227,0.227,0.397,0.851c-1.816,0.454-1.816,0.738-2.497,0.851 V173.088z M277.395,206.003c0.965,0.624,2.157,1.078,2.894,1.759c0.908,2.554-0.227,1.305,1.532,3.973 c1.022,1.419,0.795,2.44,1.873,3.235c1.93-0.227,0.227,0.34,1.475-0.851c0.227-0.227,0.794-0.965,0.965-1.192 c-0.624-0.965-1.021-1.078-1.589-2.043c2.213-2.894,3.178-1.249,3.689,0.681c1.362,5.391,3.519,3.802,5.278,3.575 c1.816-0.227,0.227,0.057,1.873,0.511c1.589,0.397,0.794,0,1.93-0.284c3.746-0.908,0.851,6.299,0.454,7.094 c-2.043,0.227-1.646-0.17-3.065-0.341c-2.951-0.284,0.17,1.759-6.753-0.511c-6.64-2.1-5.221-2.611-6.64,2.043 c-1.532-0.113-1.475-0.397-2.894-0.908c-0.568-0.227-0.851-0.34-1.078-0.397h-0.057c-0.568-0.17,0,0-1.192-1.135 c-1.022-0.965-3.519-1.192-5.335-2.157c0-1.532,1.362-2.781-0.284-4.654c-0.511-0.113-8.059,0.17-9.307,0.397 c-2.44,0.511-2.894,2.611-6.243,2.157c-1.816-0.284-1.192-0.057-1.646-1.135c0.624-0.624,0-0.284,1.021-0.681 c0.397-0.113,0.511-0.113,0.908-0.113c5.448-0.851,2.667-3.575,6.072-6.243c2.837-2.27,0.624,0.057,2.156-2.724 c1.93-0.17,1.646,0.794,3.292,0c1.362-0.681,0.908-1.249,2.837-1.362c1.703,1.703,1.362,2.724,4.143,4.029 c1.078,0.511,1.759,0.795,2.497,1.759c1.249,1.816,0.17,1.249,0.681,2.497c0.113-0.057,0.227-0.114,0.397-0.17l0.057-0.057 c1.475-0.738-0.738-0.965,1.646-3.065c-0.681-0.511-1.192-0.851-1.646-1.135l-0.057-0.057c-1.873-1.078-1.135-0.057-3.518-3.064 c-0.624-0.851-0.795-0.908-0.795-2.213c1.759-0.284,2.043,0.965,3.632,2.327c0.227,0.227,0.454,0.397,0.738,0.568l0.057,0.057 V206.003z M315.247,282.446c-1.532,0.794-1.759,2.611-2.951,3.632c-1.249,1.192-3.008,0.624-3.462,2.781 c-0.624,2.724,1.078,1.873-0.794,5.391c-0.681,1.305-0.738,4.597,0.34,5.562c3.065,2.951,4.767-4.54,5.448-6.924 c0.511-1.702,1.021-3.575,1.589-5.164c0.568-1.703,1.362-3.178-0.17-5.335V282.446z M310.14,203.222 c0.227,3.462,2.327,4.824,3.746,6.413c-0.17,1.646-0.567,1.249-0.511,3.519c1.759,1.249,3.008,2.043,5.278,1.419 c0.34-2.781-0.568-2.667-1.419-4.54c0.113-0.227,0.511-0.511,0.624-0.567c0.624-0.851,0.34,0.34,0.624-1.078 c-1.646-0.568-4.37-2.27-4.597-4.483c0.795-0.624,0.568-0.227,1.192-0.624c1.305-0.851,0.34,0.454,1.078-1.021 c-0.681-1.305-1.419-1.532-3.065-0.908c-0.738,0.284-2.611,1.646-2.951,1.93V203.222z M295.612,204.13 c-1.078-1.532-1.022-2.327-3.178-2.384c-0.851,0.908-1.816,2.27-2.327,3.689c-0.681,2.1-0.227,0.681-0.113,2.951 c-0.057,0.057,0,0.17,0,0.284c-0.057,1.362-0.34-0.284-0.17,1.021c1.646-0.34,0.397-0.34,1.646-0.738 c1.192-0.397,4.767-1.476,5.789-1.192c2.44,0.568,4.483,2.497,7.264,0.568c-0.113-2.497-3.121-3.405-5.164-4.483 c0.114-2.27,0.681-0.454,0.568-2.667c-0.681-0.057-1.135-0.113-1.816,0.114c-1.589,0.738-0.738,0.908-0.738,1.135 c0.057,1.249,1.589-0.227-0.057,1.249c-0.454,0.397-1.192,0.397-1.759,0.454H295.612z M254.184,186.935 c-0.057,3.973,1.305,2.667,2.61,4.597c-0.624,1.702-0.738,0.34-1.362,2.1c-0.624,1.475,0.114,0.17-0.227,2.667 c1.021,0.057,2.554-0.284,3.916-0.397c1.93-0.17,1.873-0.34,2.554-2.327c-1.078-1.305-2.1-2.611-3.235-3.916 c-1.362-2.1,0-0.681-0.397-2.44c-0.34-0.624-0.624-1.249-0.908-1.873c-1.816,0.624-1.646,0.454-2.894,1.589H254.184z"></path> <path style="fill:#49c4b1;" d="M70.711,162.759l31.326-12.599l-5.505-13.393l50.508,21.679l-20.6,51.359l-6.47-15.947l-26.9,10.783 c-11.974,14.812-13.053,33.823-4.086,56.693l-28.886-22.53c-12.826-9.988-18.898-24.97-16.685-41.087 C45.684,181.601,55.558,168.832,70.711,162.759z"></path> <path style="fill:#49c4b1;" d="M93.07,204.698c-48.748,18.671-5.391,55.672-5.391,55.672l1.305,1.021 C80.869,242.266,79.847,223.312,93.07,204.698z"></path> <path style="fill:#49c4b1;" d="M115.089,402.756l-2.327-33.71l-14.415,1.078l36.207-41.371l42.506,35.469l-17.139,1.249 l1.986,28.886c10.385,15.947,28.148,22.87,52.664,21.395l-30.361,20.544c-13.507,9.137-29.624,10.272-44.265,3.121 c-14.642-7.151-23.722-20.487-24.857-36.774V402.756z"></path> <path style="fill:#49c4b1;" d="M161.851,394.414c2.667,52.153,51.302,22.36,51.302,22.36l1.419-0.965 c-20.714,1.816-39.044-3.121-52.664-21.395H161.851z"></path> <path style="fill:#49c4b1;" d="M357.015,434.706l-32.745-8.229l-3.405,14.074l-28.148-47.216l46.876-29.453l-4.143,16.685 l28.091,7.037c18.387-4.937,30.418-19.749,36.661-43.471l10.158,35.242c4.483,15.663,0.624,31.326-10.669,43.073 c-11.293,11.747-26.843,16.231-42.619,12.258H357.015z"></path> <path style="fill:#49c4b1;" d="M363.542,387.66c50.394,13.563,37.115-41.882,37.115-41.882l-0.454-1.589 C395.492,364.45,385.163,380.396,363.542,387.66z"></path> <path style="fill:#49c4b1;" d="M462.173,214.516l-17.933,28.602l12.315,7.605l-53.629,12.201l-13.507-53.686l14.642,9.08 l15.379-24.573c0.965-19.011-9.364-35.015-30.021-48.294l36.604,1.249c16.287,0.567,29.964,9.08,37.625,23.495 C471.31,184.552,470.799,200.725,462.173,214.516z"></path> <path style="fill:#49c4b1;" d="M419.44,193.745c28.489-43.754-28.375-48.238-28.375-48.238l-1.703-0.057 c17.82,10.726,29.794,25.481,30.021,48.294H419.44z"></path> <path style="fill:#49c4b1;" d="M285.226,46.422l21.679,25.935l11.01-9.364l-4.994,54.764l-55.218-3.746l13.166-11.123 l-18.614-22.246c-17.82-6.81-36.207-1.93-55.218,13.62l12.485-34.447c5.562-15.323,17.933-25.708,33.937-28.545 c16.06-2.838,31.269,2.667,41.711,15.152H285.226z"></path> <path style="fill:#49c4b1;" d="M252.254,80.699c-32.802-40.576-54.65,12.031-54.65,12.031l-0.568,1.589 C212.756,80.699,230.462,73.889,252.254,80.699z"></path> </g></svg>`;      
      setIconSource("sustainability-icon", pmc34svg); 

    //MECHANICAL DESIGN EFFORTS ICONS
    const pmc41svg = `<svg viewBox="0 0 24 24" width="34" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="#4000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M11.7255 17.1019C11.6265 16.8844 11.4215 16.7257 11.1734 16.6975C10.9633 16.6735 10.7576 16.6285 10.562 16.5636C10.4743 16.5341 10.392 16.5019 10.3158 16.4674L10.4424 16.1223C10.5318 16.1622 10.6239 16.1987 10.7182 16.2317L10.7221 16.2331L10.7261 16.2344C11.0287 16.3344 11.3265 16.3851 11.611 16.3851C11.8967 16.3851 12.1038 16.3468 12.2629 16.2647L12.2724 16.2598L12.2817 16.2544C12.5227 16.1161 12.661 15.8784 12.661 15.6021C12.661 15.2955 12.4956 15.041 12.2071 14.9035C12.062 14.8329 11.8559 14.7655 11.559 14.6917C11.2545 14.6147 10.9987 14.533 10.8003 14.4493C10.6553 14.3837 10.5295 14.279 10.4161 14.1293C10.3185 13.9957 10.2691 13.7948 10.2691 13.5319C10.2691 13.2147 10.3584 12.9529 10.5422 12.7315C10.7058 12.5375 10.9381 12.4057 11.2499 12.3318C11.4812 12.277 11.6616 12.1119 11.7427 11.8987C11.8344 12.1148 12.0295 12.2755 12.2723 12.3142C12.4751 12.3465 12.6613 12.398 12.8287 12.4677L12.7122 12.8059C12.3961 12.679 12.085 12.6149 11.7841 12.6149C10.7848 12.6149 10.7342 13.3043 10.7342 13.4425C10.7342 13.7421 10.896 13.9933 11.1781 14.1318L11.186 14.1357L11.194 14.1393C11.3365 14.2029 11.5387 14.2642 11.8305 14.3322C12.1322 14.4004 12.3838 14.4785 12.5815 14.5651L12.5856 14.5669L12.5897 14.5686C12.7365 14.6297 12.8624 14.7317 12.9746 14.8805L12.9764 14.8828L12.9782 14.8852C13.0763 15.012 13.1261 15.2081 13.1261 15.4681C13.1261 15.7682 13.0392 16.0222 12.8604 16.2447C12.7053 16.4377 12.4888 16.5713 12.1983 16.6531C11.974 16.7163 11.8 16.8878 11.7255 17.1019Z" fill="#49c4b1"></path> <path d="M11.9785 18H11.497C11.3893 18 11.302 17.9105 11.302 17.8V17.3985C11.302 17.2929 11.2219 17.2061 11.1195 17.1944C10.8757 17.1667 10.6399 17.115 10.412 17.0394C10.1906 16.9648 9.99879 16.8764 9.83657 16.7739C9.76202 16.7268 9.7349 16.6312 9.76572 16.5472L10.096 15.6466C10.1405 15.5254 10.284 15.479 10.3945 15.5417C10.5437 15.6262 10.7041 15.6985 10.8755 15.7585C11.131 15.8429 11.3762 15.8851 11.611 15.8851C11.8129 15.8851 11.9572 15.8628 12.0437 15.8181C12.1302 15.7684 12.1735 15.6964 12.1735 15.6021C12.1735 15.4929 12.1158 15.411 12.0004 15.3564C11.8892 15.3018 11.7037 15.2422 11.4442 15.1777C11.1104 15.0933 10.8323 15.0039 10.6098 14.9096C10.3873 14.8103 10.1936 14.6514 10.0288 14.433C9.86396 14.2096 9.78156 13.9092 9.78156 13.5319C9.78156 13.095 9.91136 12.7202 10.1709 12.4074C10.4049 12.13 10.7279 11.9424 11.1401 11.8447C11.2329 11.8227 11.302 11.7401 11.302 11.6425V11.2C11.302 11.0895 11.3893 11 11.497 11H11.9785C12.0862 11 12.1735 11.0895 12.1735 11.2V11.6172C12.1735 11.7194 12.2487 11.8045 12.3471 11.8202C12.7082 11.8777 13.0255 11.9866 13.2989 12.1469C13.3765 12.1924 13.4073 12.2892 13.3775 12.3756L13.0684 13.2725C13.0275 13.3914 12.891 13.4417 12.7812 13.3849C12.433 13.2049 12.1007 13.1149 11.7841 13.1149C11.4091 13.1149 11.2216 13.2241 11.2216 13.4425C11.2216 13.5468 11.2773 13.6262 11.3885 13.6809C11.4998 13.7305 11.6831 13.7851 11.9386 13.8447C12.2682 13.9192 12.5464 14.006 12.773 14.1053C12.9996 14.1996 13.1953 14.356 13.3602 14.5745C13.5291 14.7929 13.6136 15.0908 13.6136 15.4681C13.6136 15.8851 13.4879 16.25 13.2365 16.5628C13.0176 16.8354 12.7145 17.0262 12.3274 17.1353C12.2384 17.1604 12.1735 17.2412 12.1735 17.3358V17.8C12.1735 17.9105 12.0862 18 11.9785 18Z" fill="#49c4b1"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M9.59235 5H13.8141C14.8954 5 14.3016 6.664 13.8638 7.679L13.3656 8.843L13.2983 9C13.7702 8.97651 14.2369 9.11054 14.6282 9.382C16.0921 10.7558 17.2802 12.4098 18.1256 14.251C18.455 14.9318 18.5857 15.6958 18.5019 16.451C18.4013 18.3759 16.8956 19.9098 15.0182 20H8.38823C6.51033 19.9125 5.0024 18.3802 4.89968 16.455C4.81587 15.6998 4.94656 14.9358 5.27603 14.255C6.12242 12.412 7.31216 10.7565 8.77823 9.382C9.1696 9.11054 9.63622 8.97651 10.1081 9L10.0301 8.819L9.54263 7.679C9.1068 6.664 8.5101 5 9.59235 5Z" stroke="#49c4b1" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M13.2983 9.75C13.7125 9.75 14.0483 9.41421 14.0483 9C14.0483 8.58579 13.7125 8.25 13.2983 8.25V9.75ZM10.1081 8.25C9.69391 8.25 9.35812 8.58579 9.35812 9C9.35812 9.41421 9.69391 9.75 10.1081 9.75V8.25ZM15.9776 8.64988C16.3365 8.44312 16.4599 7.98455 16.2531 7.62563C16.0463 7.26671 15.5878 7.14336 15.2289 7.35012L15.9776 8.64988ZM13.3656 8.843L13.5103 9.57891L13.5125 9.57848L13.3656 8.843ZM10.0301 8.819L10.1854 8.08521L10.1786 8.08383L10.0301 8.819ZM8.166 7.34357C7.80346 7.14322 7.34715 7.27469 7.1468 7.63722C6.94644 7.99976 7.07791 8.45607 7.44045 8.65643L8.166 7.34357ZM13.2983 8.25H10.1081V9.75H13.2983V8.25ZM15.2289 7.35012C14.6019 7.71128 13.9233 7.96683 13.2187 8.10752L13.5125 9.57848C14.3778 9.40568 15.2101 9.09203 15.9776 8.64988L15.2289 7.35012ZM13.2209 8.10709C12.2175 8.30441 11.1861 8.29699 10.1854 8.08525L9.87486 9.55275C11.0732 9.80631 12.3086 9.81521 13.5103 9.57891L13.2209 8.10709ZM10.1786 8.08383C9.47587 7.94196 8.79745 7.69255 8.166 7.34357L7.44045 8.65643C8.20526 9.0791 9.02818 9.38184 9.88169 9.55417L10.1786 8.08383Z" fill="#49c4b1"></path> </g></svg>`;      
    setIconSource("MEB-icon", pmc41svg);
    setIconSource("COST-icon", pmc41svg); 
    const pmc42svg = `<svg viewBox="0 0 24 24" width="24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M7 9V15M21 14V7.2C21 6.0799 21 5.51984 20.782 5.09202C20.5903 4.71569 20.2843 4.40973 19.908 4.21799C19.4802 4 18.9201 4 17.8 4H6.2C5.0799 4 4.51984 4 4.09202 4.21799C3.71569 4.40973 3.40973 4.71569 3.21799 5.09202C3 5.51984 3 6.0799 3 7.2V16.8C3 17.9201 3 18.4802 3.21799 18.908C3.40973 19.2843 3.71569 19.5903 4.09202 19.782C4.51984 20 5.0799 20 6.2 20H12M12 13H12.7976C13.2426 13 13.465 13 13.6765 13.0463C13.8641 13.0874 14.0447 13.1553 14.213 13.2479C14.4026 13.3523 14.57 13.4988 14.9049 13.7918L20.8649 19.0068C21.4792 19.5443 21.5107 20.4893 20.9335 21.0665C20.4082 21.5918 19.5656 21.6199 19.0065 21.1307L13.0928 15.9562C12.6907 15.6043 12.4896 15.4284 12.3452 15.2158C12.2173 15.0273 12.1225 14.8184 12.065 14.5981C12 14.3495 12 14.0823 12 13.5479V13Z" stroke="#49c4b1" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>`;      
    setIconSource("DRAWING-icon", pmc42svg);
     

    function setIconSource(elementId, iconFileName){
        const iconElement = document.getElementById(elementId);
        if (iconElement) {
            iconElement.src = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(iconFileName)}`;
        }
}

    // Run initial calculation in case values are pre-filled

    calculateValues();
       
	try { 

        const startTime = performance.now();   
       
        _module = moduleName;
        _formType = formType;
        _web = pnp.sp.web;
        _webUrl = _spPageContextInfo.siteAbsoluteUrl;
        _layout = '/_layouts/15/PCW/General/EForms';     

        _ImageUrl = _spPageContextInfo.webAbsoluteUrl + '/Style%20Library/tooltip.png',
        _ListInternalName = _spPageContextInfo.serverRequestPath.split('/')[5],
        _ProjectNumber = _spPageContextInfo.serverRequestPath.split('/')[2],
        _ListFullUrl = _spPageContextInfo.webAbsoluteUrl + '/Lists/' + _ListInternalName,

        _errorImg = _layout + '/Images/Error.png';
        _submitImg = _layout + '/Images/Submitted.png';
        _htLibraryUrl = _layout + '/controls/handsonTable/libs/handsontable.full.min.js'; 

        if(moduleName == 'Bench')
			await onBenchRender(formType); 		
        
        const endTime = performance.now();
        const elapsedTime = endTime - startTime;
        console.log(`Execution time HRDynamics: ${elapsedTime} milliseconds`);
	}
	catch (e) {
		//alert(e);
		console.log(e);	
	}
}

var onBenchRender = async function (formType){	

    if(formType === "New")
        await BM_newForm();  
    else if(formType==="Edit")
        await BM_editForm();
    else if(formType==="Display")
        await BM_displayForm();
}

var BM_newForm = async function(){ 
    
    try 
    {
        fd.toolbar.buttons[0].style = "display: none;";
        fd.toolbar.buttons[1].style = "display: none;";        

        await loadScripts();
        showPreloader();
        await loadButtons();
        formatingPagelayout('Mechanical Benchmark Form');
        ['Year'].forEach(hideField);

        await pnp.sp.web.currentUser.get().then(user => {
            DisplayName = user.Title;
            LoginName = user.LoginName.split('|')[1];
        });
        
        let currentYear = new Date().getFullYear();
        let yearArr = [];  

        for (let i = 0; i <= 20; i++) {
            yearArr.push(currentYear - i);
        }
        fd.field('YearChoice').widget.setDataSource({
            data: yearArr
        });

        fd.field('YearChoice').$on('change', async function(value)	{
            if(value){
                ['Year'].forEach(showField);
                fd.field('Year').value = value;
                ['Year'].forEach(hideField);
            }            
        });
        
        fd.field('CreatedBy').value = DisplayName;
        ['CreatedBy', 'ProjectName', 'Country', 'Occupancy'].forEach(disableField);        
    }    
    catch(err){
        console.log(err.message, err.stack)
        await _generateErrorEmail(_spPageContextInfo.siteAbsoluteUrl, '', '', err.message, err.stack); 
        showPreloader();       
    }
    finally {      
        hidePreloader();
    }      
}

var BM_editForm = async function(){ 
    
    try 
    {
        fd.toolbar.buttons[0].style = "display: none;";
        fd.toolbar.buttons[1].style = "display: none;";        

        await loadScripts();
        showPreloader();
        await loadButtons();
        formatingPagelayout('Mechanical Benchmark Form');
        ['Year'].forEach(hideField);

        await pnp.sp.web.currentUser.get().then(user => {
            DisplayName = user.Title;
            LoginName = user.LoginName.split('|')[1];
        });
        
        let currentYear = new Date().getFullYear();
        let yearArr = [];  

        for (let i = 0; i <= 20; i++) {
            yearArr.push(currentYear - i);
        }
        fd.field('YearChoice').widget.setDataSource({
            data: yearArr
        });

        fd.field('YearChoice').$on('change', async function(value)	{
            if(value){
                ['Year'].forEach(showField);
                fd.field('Year').value = value;
                ['Year'].forEach(hideField);
            }            
        });
        
        fd.field('CreatedBy').value = DisplayName;
        ['CreatedBy', 'ProjectName', 'Country', 'Occupancy'].forEach(disableField);        
    }    
    catch(err){
        console.log(err.message, err.stack)
        await _generateErrorEmail(_spPageContextInfo.siteAbsoluteUrl, '', '', err.message, err.stack); 
        showPreloader();       
    }
    finally {      
        hidePreloader();
    }      
}
var BM_displayForm = async function(){ 
    
    try 
    {
        fd.toolbar.buttons[0].style = "display: none;";
        fd.toolbar.buttons[1].style = "display: none;";        

        await loadScripts();
        showPreloader();
        await loadButtons();
        formatingPagelayout('Mechanical Benchmark Form');
        ['Year'].forEach(hideField);

        await pnp.sp.web.currentUser.get().then(user => {
            DisplayName = user.Title;
            LoginName = user.LoginName.split('|')[1];
        });
        
        let currentYear = new Date().getFullYear();
        let yearArr = [];  

        for (let i = 0; i <= 20; i++) {
            yearArr.push(currentYear - i);
        }
        fd.field('YearChoice').widget.setDataSource({
            data: yearArr
        });

        fd.field('YearChoice').$on('change', async function(value)	{
            if(value){
                ['Year'].forEach(showField);
                fd.field('Year').value = value;
                ['Year'].forEach(hideField);
            }            
        });
        
        fd.field('CreatedBy').value = DisplayName;
        ['CreatedBy', 'ProjectName', 'Country', 'Occupancy'].forEach(disableField);        
    }    
    catch(err){
        console.log(err.message, err.stack)
        await _generateErrorEmail(_spPageContextInfo.siteAbsoluteUrl, '', '', err.message, err.stack); 
        showPreloader();       
    }
    finally {      
        hidePreloader();
    }      
}

var loadScripts = async function(){
	const libraryUrls = [		
        _layout + '/controls/preloader/jquery.dim-background.min.js',
        _layout + '/plumsail/js/preloader.js',

		_layout + '/controls/tooltipster/jquery.tooltipster.min.js',
        _layout + '/plumsail/js/customMessages.js',
        _layout + '/plumsail/js/utilities.js',
		_layout + '/plumsail/js/commonUtils.js',
        _layout + '/plumsail/HRDynamics/utils.js'
	];
  
	const cacheBusting = '?t=' + new Date().getTime();

    libraryUrls.map(url => { 
		  $('head').append(`<script src="${url}${cacheBusting}" async></script>`); 
		});
		
	const stylesheetUrls = [
		_layout + '/controls/tooltipster/tooltipster.css',
        _layout + '/plumsail/css/benchmarkStyle.css'     
	];
  
	stylesheetUrls.map((item) => {
	  var stylesheet = item;
	  $('head').append(`<link rel="stylesheet" type="text/css" href="${stylesheet}${cacheBusting}">`);
	});
}

const _setData = (Handsontable) => {

    if(_data.length < batchSize){
        var remainingLength = batchSize - _data.length;
        for (var i = 0; i < remainingLength; i++) {
          var rowData = { id: i + 1, value: 'Row ' + (i + 1) }
          _data.push(rowData);
        }
    }

    var contextMenu = ['row_below']; //, '---------', 'remove_row'];
    console.log(_colArray)
    debugger;
     _container = document.getElementById('dt');
	 _hot = new Handsontable(_container, {
		data: _data,
        columns: _colArray,
        width:'100%',
        height: '500',
        autoWrapRow: true,
        autoWrapCol: true,
        //filters: true,
        // filter_action_bar: true,
        // dropdownMenu: ['filter_by_condition', 'filter_by_value', 'filter_action_bar'],
        // rowHeaders: true,
        //colHeaders: true,
        //manualColumnResize: true,
        stretchH: 'all',
        licenseKey: htLicenseKey
	});

    // _hot = new Handsontable(_container, {
    //     data: [
    //       ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1'],
    //       ['A2', 'B2', 'C2', 'D2', 'E2', 'F2', 'G2', 'H2', 'I2'],
    //       ['A3', 'B3', 'C3', 'D3', 'E3', 'F3', 'G3', 'H3', 'I3'],
    //     ],
    //     colHeaders: [
    //       'ID',
    //       'Full name',
    //       'Position',
    //       'Country',
    //       'City',
    //       'Address',
    //       'Zip code',
    //       'Mobile',
    //       'E-mail',
    //     ],
    //     rowHeaders: true,
    //     height: 'auto',
    
    //     licenseKey: htLicenseKey
    //   });

    // setTimeout(() => {
    //     _hot.render();
    // }, 200);
}

var getSchema = async function(){
    var colArray = [];

    var fetchUrl = `${_webUrl}/Config/TR-Schema.txt`
    await fetch(fetchUrl)
        .then(response => response.text())
        .then(async data => {
            colArray = JSON.parse(data); 

        //     for (const obj of colArray) {
        //     if (obj.renderer === "customDropdownRenderer"){
        //         obj.renderer = customDropdownRenderer;
        //     }
        //     if (obj.source === "getDropDownListValues"){
        //         obj.source = await getDropDownListValues(obj.listname, obj.listColumn);
        //         }
        //     else if (obj.source === "getQMDropDownListValues"){
        //         obj.source = await getQMDropDownListValues(obj.listname, obj.listColumn);
        //     }
        // }
    });

    return  colArray
}

async function GetEmployeesInfo(LoginName, isBatch){ 

    let xmlDoc = await GetEmployeesInfoBySeparatedLoginNames('GET', true, LoginName);  
   
    const table1Nodes = xmlDoc.getElementsByTagName("NewDataSet");

	if(table1Nodes !== undefined && table1Nodes !== null && table1Nodes.length > 0)	{
		let DepartmentDesc = table1Nodes[0].getElementsByTagName("DepartmentDesc")[0]?.textContent.trim() || '';                             
        let EmployeeId = table1Nodes[0].getElementsByTagName("EmployeeId")[0]?.textContent.trim() || '';
        let EmployeeIDNumber = parseInt(EmployeeId, 10);
        EmployeeId = EmployeeIDNumber.toString().padStart(6, '0');
        let FullName = table1Nodes[0].getElementsByTagName("FullName")[0]?.textContent.trim() || '';

        if (isBatch) {
            return {
                Title: FullName,
                IDNo: EmployeeId,
                Department: DepartmentDesc,
                Position: "Position"             
            };
        }
        else {
            fd.field('IDNo').value = EmployeeId;
            fd.field('Department').value = DepartmentDesc;
            fd.field('Name').value = FullName;
            _DisableFormFields([fd.field('IDNo'), fd.field('Department'), fd.field('Name')], true);
        } 
    } 
}

var GetEmployeesInfoBySeparatedLoginNames = async function(method, isAsync, LoginName){  

    var siteUrl = _spPageContextInfo.siteAbsoluteUrl;    	
    var serviceUrl = siteUrl + "/_layouts/15/NewsLetter/HSEIncidentForm.aspx?command=GetEmployeesInfoBySeparatedLoginNames&loginNames=" + LoginName;
    let soapContent = `<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
                         <soap:Body>
                          <GetEmployeesInfoBySeparatedLoginNames xmlns="http://tempuri.org/">
                           <loginNames>${LoginName}</loginNames >
                          </GetEmployeesInfoBySeparatedLoginNames>
                         </soap:Body>
                       </soap:Envelope>`;
                      
	return new Promise((resolve, reject) => {
        var xhr = new XMLHttpRequest();
        xhr.open(method, serviceUrl, isAsync);
        xhr.onreadystatechange = function() {
            if (xhr.readyState == 4) {
                try {
                    if (xhr.status == 200) {
                        const response = this.responseText;
                        const parser = new DOMParser();
                        const xmlDoc = parser.parseFromString(response, "text/xml");
                        resolve(xmlDoc); // Resolve the promise with the parsed XML document
                    } else {
                        reject(new Error('Failed to get valid response'));
                    }
                } catch (err) {
                    reject(err);
                }
            }
        };
        xhr.setRequestHeader('Content-Type', 'text/xml');
        if (soapContent !== '') 
		  xhr.send(soapContent);
        else xhr.send();
    });
}

async function CheckifUserinSPGroup() {

	let IsTMUser = "User"; 

	try{
		 await pnp.sp.web.currentUser.get()
         .then(async function(user){
			await pnp.sp.web.siteUsers.getById(user.Id).groups.get()
			 .then(async function(groupsData){
				for (var i = 0; i < groupsData.length; i++) {				
					if(groupsData[i].Title === "TRBulkInsertion")
					{					
					   IsTMUser = "TRBulkInsertion";
                       _DipN = user.Title;
					   break;
				    }					
				}				
			});
	     });
    }
	catch(e){
        console.log(e);
    }
	return IsTMUser;				
}

async function HandleCostValue(addedID, isdelete) {
    let AllItems = fd.control('TrainBulkTable').widget._data;
    let itemIdsArray = AllItems.map(item => item.id);

    // If isdelete is true, exclude the item with addedID from the AllItems array
    if (isdelete && addedID) {
        itemIdsArray = itemIdsArray.filter(id => String(id) !== String(addedID));
    }

    // If AllItems is empty, set cost to 0
    if (!itemIdsArray || itemIdsArray.length === 0) {
        fd.field('Cost').value = 0;
        _DisableFormFields([_fields.Cost], true);
        return; // Exit the function here if AllItems is empty
    }

    // Otherwise, proceed to sum the costs of all items in AllItems
    try {
        const costs = await Promise.all(itemIdsArray.map(item => {
            return pnp.sp.web.lists.getByTitle('Trainee Users').items.getById(item).select("Cost").get().then(i => {
                return parseInt(i.Cost) || 0;
            });
        }));

        // Sum all the costs retrieved from SharePoint
        let totalCost = costs.reduce((sum, cost) => sum + cost, 0);

        // If addedID is not null and isdelete is false, fetch its cost and add it to the total cost
        if (addedID && !isdelete) {
            try {

                const listTitle = 'Trainee Users';//list.Title;
        
                const camlFilter = `<View>
                                        <ViewFields>
                                            <FieldRef Name='Cost' />
                                            <FieldRef Name='Employee' />                                                                       
                                        </ViewFields>
                                        <Query>
                                            <Where>									
                                                <Eq><FieldRef Name='ID' /><Value Type='Counter'>${addedID}</Value></Eq>						
                                            </Where>
                                        </Query>
                                    </View>`;

                const addedItem = await pnp.sp.web.lists.getByTitle(listTitle).getItemsByCAMLQuery({ ViewXml: camlFilter });

                const addedCost = parseInt(addedItem[0].Cost) || 0;
                totalCost += addedCost; // Add the cost of the added item to the total if isdelete is false
                fd.field('Cost').value = totalCost; // Update the field with the total cost
                _DisableFormFields([_fields.Cost], true); // Disable the Cost field if needed

                const employeeId = addedItem[0].EmployeeId; // Get the Employee Id from the expanded lookup field
                const user = await pnp.sp.web.siteUsers.getById(employeeId).get(); // Get user details
                const userLoginName = user.LoginName.split('|')[1];

                console.log('Employee Login Name:', userLoginName); // Log employee login name
                const employeeInfo = await GetEmployeesInfo(userLoginName, true);

                // Now update the record in SharePoint (this can be the added item or another field)
                await pnp.sp.web.lists.getByTitle('Trainee Users').items.getById(addedID)
                    .update({
                        Title: employeeInfo.Title,  // Use employee info to update fields
                        IDNo: employeeInfo.IDNo,
                        Department: employeeInfo.Department,
                        Position: employeeInfo.Position
                    });

                console.log("Record updated successfully!");
                fd.control('TrainBulkTable').refresh(); // Refresh the table after updating

            } catch (error) {
                console.error("Error fetching or updating the added item:", error);
            }
        } else {
            // If addedID is null or isdelete is true, just set the totalCost directly
            fd.field('Cost').value = totalCost;
            _DisableFormFields([_fields.Cost], true);
        }
    } catch (error) {
        console.error("Error fetching costs:", error);
    }
}

function FixListTabelRows(){ 
    
    let tables = $("table[role='grid']");
    tables.each(function(tblIndex, tbl){
        $(tbl).find('tr').each(function(trIndex, tr) {
    	  
    	    if (trIndex === 0){    	
    		   let childs = tr.children;
    		   if(childs.length > 0){
    		     childs[0].style.textAlign = 'center';
    			 childs[1].style.textAlign = 'center';
                 childs[3].style.textAlign = 'center';          
                 childs[5].style.textAlign = 'center';
                }                  		   
    		}
    		
    	   $(tr).find('td').each(function(tdIndex, td) {
                let $td = $(td);
                
                if (tdIndex === 0 || tdIndex === 1 || tdIndex === 3 || tdIndex === 5)
                    td.style.textAlign = 'center';
                    
                else{
                    if(_formType !== 'Display')
                        $td.children().css('whiteSpace', 'nowrap');
                }
                 
                if(_formType !== 'Display')
                    $td.css('whiteSpace', 'nowrap');
    		});                			
        });
    });    
}

function FixWidget(dt){
    FixListTabelRows();
    var Clientwidth = dt.$el.clientWidth;   
    var Rwidget = dt.widget;
    var columns = Rwidget.columns;  
    var ColumnsLength = columns.length;
    var width = Clientwidth/(ColumnsLength-1);
    
    var RemainingWidth = 0;
    var RemainingWidth2 = 0;
    var RemainingWidth3 = 0;
    var RemainingWidth4 = 0;
    var RemainingWidth5 = 0;
    var RemainingWidth6 = 0;
            
    for (let i = 1; i < ColumnsLength; i++) {    
    
        var field = columns[i].field;

        if(field === 'Employee'){
            var ReviewedWidth = 300;
            RemainingWidth = width - ReviewedWidth;            
            dt._columnWidthViewStorage.set(field, ReviewedWidth); 
            Rwidget.resizeColumn(columns[i], ReviewedWidth); 
        }                  
        else if(field === 'Cost'){
            var ReviewedWidth = 100;
            RemainingWidth2 = width - ReviewedWidth;            
            dt._columnWidthViewStorage.set(field, ReviewedWidth); 
            Rwidget.resizeColumn(columns[i], ReviewedWidth); 
        } //Department, Position
        else if(field === 'IDNo'){
            var ReviewedWidth = 100;
            RemainingWidth3 = width - ReviewedWidth;            
            dt._columnWidthViewStorage.set(field, ReviewedWidth); 
            Rwidget.resizeColumn(columns[i], ReviewedWidth); 
        } 
        else if(field === '#commands'){
            var ReviewedWidth = 20;
            RemainingWidth4 = width - ReviewedWidth;            
            dt._columnWidthViewStorage.set(field, ReviewedWidth); 
            Rwidget.resizeColumn(columns[i], ReviewedWidth); 
        }
        else if(field === 'Department'){
            var ReviewedWidth = 300;
            RemainingWidth5 = width - ReviewedWidth;            
            dt._columnWidthViewStorage.set(field, ReviewedWidth); 
            Rwidget.resizeColumn(columns[i], ReviewedWidth); 
        }
        else if(i == (ColumnsLength - 1)){                  
            dt._columnWidthViewStorage.set(field, (width + RemainingWidth + RemainingWidth2 + RemainingWidth3 + RemainingWidth4 + RemainingWidth5 + RemainingWidth6)); 
            Rwidget.resizeColumn(columns[i], (width + RemainingWidth + RemainingWidth2 + RemainingWidth3 + RemainingWidth4 + RemainingWidth5 + RemainingWidth6)); 
        }
        else{
            dt._columnWidthViewStorage.set(field, width); 
            Rwidget.resizeColumn(columns[i], width); 
        } 
    }

    const gridContent = dt.$el.querySelector('.k-grid-content.k-auto-scrollable');
    if (gridContent) {
        gridContent.style.overflowX = 'hidden';
    }          
}

async function loadButtons(status){   
    
    fd.toolbar.buttons.push({
        icon: 'Accept',
        class: 'btn-outline-primary',
        disabled: false,
        text: 'Submit',
        style: `background-color:${greenColor}; color:white`,
        click: async function() {  	
            if(fd.isValid){

                showPreloader(); 

                _proceed = false;

                if(_formType === 'New'){

                    // let refNo = await updateCounter();              
                
                    // $(fd.field('Reference').$parent.$el).show();
                    // fd.field('Reference').value = refNo;
                    // $(fd.field('Reference').$parent.$el).hide();
                    
                    _Email = 'RFCNewEntry_Email';
                    _Notification = 'RFC_Initiated';
                }
                else if(_formType === 'Edit') {
                    
                    // fd.field('Status').disabled = false;
                    // fd.field('Status').value = 'Closed';
                    // fd.field('Status').disabled = true;                    

                    _Email = 'RFCIssued_Email';
                    _Notification = 'RFC_Reviewed';
                } 

                fd.save();
            }            
	     }
    });
    
    fd.toolbar.buttons.push({
        icon: 'Cancel',
        class: 'btn-outline-primary',
        text: 'Cancel',	
        style: `background-color:${redColor}; color:white`,
        click: async function() {            
            showPreloader();
            fd.close();
        }			
	});
    
    var buttons = fd.toolbar.buttons;
    var submitButton = buttons.find(button => button.text === 'Submit');
    if (submitButton) {  
        if (status === 'Closed') {
            submitButton.disabled = true;          

            disableRichTextField('Answer');
            
            var elem = $("textarea")[0];
	        $(elem).prop("readonly", true);   

            SetAttachmentToReadOnly();
        }
    }         
}

function formatingPagelayout(titelValue){
    
    $('div.ms-compositeHeader').remove();
    $('i.ms-Icon--PDF').remove();
          
    let toolbarElements = document.querySelectorAll('.fd-toolbar-primary-commands');
    toolbarElements.forEach(function(toolbar) {
        toolbar.style.display = "flex";
        toolbar.style.justifyContent = "flex-end";                 
    });

    let commandBarElement = document.querySelectorAll('[aria-label="Command Bar."]');
        commandBarElement.forEach(function(element) {        
        element.style.paddingTop = "16px";       
    }) ;  
    
    const iconPath = _spPageContextInfo.webAbsoluteUrl + '/_layouts/15/Images/animdarlogo1.png';
    const linkElement = `<a href="${_spPageContextInfo.webAbsoluteUrl}" style="text-decoration: none; color: inherit; display: flex; align-items: center; font-size: 18px;">
                            <img src="${iconPath}" alt="Icon" style="width: 50px; height: 26px; margin-right: 14px;">${titelValue}</a>`; 
    $('span.o365cs-nav-brandingText').html(linkElement);

    $('.o365cs-base.o365cs-topnavBGColor-2').css('background', 'linear-gradient(to bottom, #808080, #4d4d4d, #1a1a1a, #000000, #1a1a1a, #4d4d4d, #808080)');   
    
    $('.fd-form p').css({
        'margin-top': '0',
        'margin-bottom': '1rem',
        'display': 'none'
    });

    // Select the <div> element by its role and aria-label attributes    
    const commandBarDiv = document.querySelector('div[role="region"][aria-label="Command Bar."]');

    // Check if the element exists
    if (commandBarDiv) {
        // Change the padding-top
        commandBarDiv.style.paddingTop = "1px"; // Set to desired value
    } else {
        console.error("Element not found.");
    }
}


// Function to calculate all values dynamically
 function calculateValues() {

    var fieldsToDisable = [
        "PA_3", "PA_5", "PA_7",
        "HVAC_3", "HVAC_4", "HVAC_14", "HVAC_15", "HVAC_16", "HVAC_30", "HVAC_32", "HVAC_34",
        "Plumbing_4", "Plumbing_5", "Plumbing_6", "Plumbing_9", "Plumbing_10", "Plumbing_11",
        "Plumbing_14", "Plumbing_15", "Plumbing_16", "Plumbing_19", "Plumbing_20", "Plumbing_21",
        "Plumbing_26", "Plumbing_28", "Plumbing_34", "Plumbing_36",
        "MG_4", "MG_7", "MG_8", "MG_12", "MG_13", "MG_15", "MG_16", "MG_17", "MG_18", "MG_19",
        "ED_2", "ED_4", "ED_6", "ED_8",
        "MCC_3", "MCC_4", "MCC_5", "MCC_7",
        "MDE_5"
    ];
    
    fieldsToDisable.forEach(function(fieldName, index) {
        setTimeout(function() {
            var field = fd.field(fieldName);
            if (field) {
                if (field.value === "NaN" || field.value === '' || field.value == null || field.value === 0) {
                    field.value = 0; 
                }
                field.disabled = true; 
            } 
        }, 0);
    });
    
    

// PROJECT AREAS ON CHANGE VALUES
    let PA_1 = fd.field('PA_1').value;
    let PA_2 = fd.field('PA_2').value;    
    let PA_4 = fd.field('PA_4').value;
    let PA_6 = fd.field('PA_6').value;

// HVAC ON CHANGE VALUES
    let HVAC_2 = fd.field('HVAC_2').value;
    let PA_10 = fd.field('PA_10').value;
    let HVAC_13 = fd.field('HVAC_13').value;
    let HVAC_29 = fd.field('HVAC_29').value;
    let HVAC_28 = fd.field('HVAC_28').value;
    let HVAC_31 = fd.field('HVAC_31').value;
    let HVAC_33 = fd.field('HVAC_33').value;

 // PLUMBING ON CHANGE VALUES
 let Plumbing_1 = fd.field('Plumbing_1').value;
let Plumbing_2 = fd.field('Plumbing_2').value;
let Plumbing_3 = fd.field('Plumbing_3').value;
let Plumbing_8 = fd.field('Plumbing_8').value;
let Plumbing_13 = fd.field('Plumbing_13').value;
let Plumbing_18 = fd.field('Plumbing_18').value;
let Plumbing_25 = fd.field('Plumbing_25').value;
let Plumbing_27 = fd.field('Plumbing_27').value;
let Plumbing_24 = fd.field('Plumbing_24').value;
let Plumbing_33 = fd.field('Plumbing_33').value;
let Plumbing_32 = fd.field('Plumbing_32').value;
let Plumbing_35 = fd.field('Plumbing_35').value;
let Occupancy = fd.field('Occupancy').value;

// FIREFIGHTING ON CHANGE VALUES
let FF_1 = fd.field('FF_1').value;

// MEDICAL GASES ON CHANGE VALUES

    let E110 = fd.field('MG_1').value;
    let E111 = fd.field('MG_2').value;
    let MG_6 = fd.field('MG_6').value;
    let MG_4 = fd.field('MG_4').value;
    let MG_11 = fd.field('MG_11').value;
    let MG_14 = fd.field('MG_14').value;

 // ELECTRICAL DATA ON CHANGE VALUES
    let ED_1 = fd.field('ED_1').value;
    let ED_3 = fd.field('ED_3').value;
    let ED_5 = fd.field('ED_5').value;
    let ED_7 = fd.field('ED_7').value;

// MECHANICAL COST CONSTRUCTION ON CHANGE VALUES
    let MCC_1 = fd.field('MCC_1').value;
    let MCC_6 = fd.field('MCC_6').value;

// MECHANICAL DESIGN EFFORTS
    let MDE_2 = fd.field('MDE_2').value;
    let MDE_3 = fd.field('MDE_3').value;


    let x = E110+E111;
    let oxygenDemand = fd.field('MG_4').value;
    let criticalCareAreas = fd.field('MG_2').value;
    let surgicalAirDemand = fd.field('MG_10').value;
    let medicalAirDemand = fd.field('MG_9').value;
    let vacuumDemand = fd.field('MG_14').value;


// PROJECT AREAS
PA_1 = Number(PA_1) || 0;
PA_2 = Number(PA_2) || 0;
PA_4 = Number(PA_4) || 0;
PA_6 = Number(PA_6) || 0;




if (PA_1 !== 0 && Boolean(PA_1) && Boolean(PA_2)) {
    fd.field('PA_3').value = (((PA_1 - PA_2) / PA_1) * 100).toFixed(2);
} else {
    fd.field('PA_3').value = "0";
}

if (PA_2 !== 0 && Boolean(PA_2) && Boolean(PA_4)) {
    fd.field('PA_5').value = ((PA_4 / PA_2) * 100).toFixed(2);
} else {
    fd.field('PA_5').value = "0";
}

if (PA_2 !== 0 && Boolean(PA_2) && Boolean(PA_6)) {
    fd.field('PA_7').value = ((PA_6 / PA_2) * 100).toFixed(2);
} else {
    fd.field('PA_7').value = "0";
}

// HVAC
fd.field('HVAC_1').value = "";
if (HVAC_2 !== 0 && PA_2 !== 0 && !isNaN(HVAC_2) && !isNaN(PA_2) && Boolean(HVAC_2) && Boolean(PA_2)) {
    fd.field('HVAC_3').value = (PA_2 / HVAC_2).toFixed(2);
} else {
    fd.field('HVAC_3').value = "0";
}

if (PA_2 !== 0 && !isNaN(PA_2) && !isNaN(HVAC_2) && Boolean(HVAC_2) && Boolean(PA_10)) {
    fd.field('HVAC_4').value = (PA_10 / HVAC_2).toFixed(2);
} else {
    fd.field('HVAC_4').value = "0";
}

if (HVAC_13 !== 0 && !isNaN(HVAC_13) && !isNaN(PA_2) && Boolean(HVAC_13) && Boolean(PA_2)) {
    fd.field('HVAC_14').value = (PA_2 / HVAC_13).toFixed(2);
} else {
    fd.field('HVAC_14').value = "0";
}

if (HVAC_13 !== 0 && !isNaN(PA_10) && !isNaN(HVAC_13) && Boolean(HVAC_13) && Boolean(PA_10)) {
    fd.field('HVAC_15').value = (PA_10 / HVAC_13).toFixed(2);
} else {
    fd.field('HVAC_15').value = "0";
}

if (HVAC_13 !== 0 && !isNaN(HVAC_13) && !isNaN(HVAC_2) && Boolean(HVAC_13) && Boolean(HVAC_2)) {
    fd.field('HVAC_16').value = (HVAC_13 * (HVAC_2 * 3.517)).toFixed(2);
} else {
    fd.field('HVAC_16').value = "0";
}

if (HVAC_28 !== 0 && !isNaN(HVAC_29) && !isNaN(HVAC_28) && Boolean(HVAC_28) && Boolean(HVAC_29)) {
    fd.field('HVAC_30').value = (HVAC_29 / HVAC_28).toFixed(2);
} else {
    fd.field('HVAC_30').value = "0";
}

if (HVAC_31 !== 0 && !isNaN(HVAC_28) && !isNaN(HVAC_31) && Boolean(HVAC_28) && Boolean(HVAC_31)) {
    fd.field('HVAC_32').value = (HVAC_28 / HVAC_31).toFixed(2);
} else {
    fd.field('HVAC_32').value = "0";
}

if (HVAC_28 !== 0 && !isNaN(HVAC_33) && !isNaN(HVAC_28) && Boolean(HVAC_28) && Boolean(HVAC_33)) {
    fd.field('HVAC_34').value = (HVAC_33 / HVAC_28).toFixed(2);
} else {
    fd.field('HVAC_34').value = "0";
}

// // FIRE FIGHTING
    fd.field('FF_1').value = "";
//     fd.field('FF_1').disabled = true;

// //PLUMBING
     fd.field('Plumbing_1').value = "";
//     fd.field('Plumbing_1').disabled = true;

if (!isNaN(Plumbing_3) && !isNaN(Occupancy) && Occupancy !== 0 && Boolean(Plumbing_3) && Boolean(Occupancy)) {
    fd.field('Plumbing_4').value = (Plumbing_3 / Occupancy).toFixed(2);
} else {
    fd.field('Plumbing_4').value = "0";
}

if (!isNaN(Plumbing_3) && !isNaN(PA_2) && PA_2 !== 0 && Boolean(Plumbing_3) && Boolean(PA_2)) {
    fd.field('Plumbing_5').value = (Plumbing_3 / PA_2).toFixed(2);
} else {
    fd.field('Plumbing_5').value = "0";
}

if (!isNaN(Plumbing_3) && !isNaN(Plumbing_2) && Plumbing_2 !== 0 && Boolean(Plumbing_3) && Boolean(Plumbing_2)) {
    fd.field('Plumbing_6').value = (Plumbing_3 / Plumbing_2).toFixed(2);
} else {
    fd.field('Plumbing_6').value = "0";
}

if (!isNaN(Plumbing_8) && !isNaN(Occupancy) && Occupancy !== 0 && Boolean(Plumbing_8) && Boolean(Occupancy)) {
    fd.field('Plumbing_9').value = (Plumbing_8 / Occupancy).toFixed(2);
} else {
    fd.field('Plumbing_9').value = "0";
}

if (!isNaN(Plumbing_8) && !isNaN(PA_2) && PA_2 !== 0 && Boolean(Plumbing_8) && Boolean(PA_2)) {
    fd.field('Plumbing_10').value = (Plumbing_8 / PA_2).toFixed(2);
} else {
    fd.field('Plumbing_10').value = "0";
}

if (!isNaN(Plumbing_8) && !isNaN(Plumbing_2) && Plumbing_2 !== 0 && Boolean(Plumbing_8) && Boolean(Plumbing_2)) {
    fd.field('Plumbing_11').value = (Plumbing_8 / Plumbing_2).toFixed(2);
} else {
    fd.field('Plumbing_11').value = "0";
}

if (!isNaN(Plumbing_13) && !isNaN(Occupancy) && Occupancy !== 0 && Boolean(Plumbing_13) && Boolean(Occupancy)) {
    fd.field('Plumbing_14').value = (Plumbing_13 / Occupancy).toFixed(2);
} else {
    fd.field('Plumbing_14').value = "0";
}

if (!isNaN(Plumbing_13) && !isNaN(PA_2) && PA_2 !== 0 && Boolean(Plumbing_13) && Boolean(PA_2)) {
    fd.field('Plumbing_15').value = (Plumbing_13 / PA_2).toFixed(2);
} else {
    fd.field('Plumbing_15').value = "0";
}

if (!isNaN(Plumbing_13) && !isNaN(Plumbing_2) && Plumbing_2 !== 0 && Boolean(Plumbing_13) && Boolean(Plumbing_2)) {
    fd.field('Plumbing_16').value = (Plumbing_13 / Plumbing_2).toFixed(2);
} else {
    fd.field('Plumbing_16').value = "0";
}

if (!isNaN(Plumbing_18) && !isNaN(Occupancy) && Occupancy !== 0 && Boolean(Plumbing_18) && Boolean(Occupancy)) {
    fd.field('Plumbing_19').value = (Plumbing_18 / Occupancy).toFixed(2);
} else {
    fd.field('Plumbing_19').value = "0";
}

if (!isNaN(Plumbing_18) && !isNaN(PA_2) && PA_2 !== 0 && Boolean(Plumbing_18) && Boolean(PA_2)) {
    fd.field('Plumbing_20').value = (Plumbing_18 / PA_2).toFixed(2);
} else {
    fd.field('Plumbing_20').value = "0";
}

if (!isNaN(Plumbing_18) && !isNaN(Plumbing_2) && Plumbing_2 !== 0 && Boolean(Plumbing_18) && Boolean(Plumbing_2)) {
    fd.field('Plumbing_21').value = (Plumbing_18 / Plumbing_2).toFixed(2);
} else {
    fd.field('Plumbing_21').value = "0";
}

if (!isNaN(Plumbing_25) && !isNaN(Plumbing_24) && Plumbing_24 !== 0 && Boolean(Plumbing_25) && Boolean(Plumbing_24)) {
    fd.field('Plumbing_26').value = (Plumbing_25 / Plumbing_24).toFixed(2);
} else {
    fd.field('Plumbing_26').value = "0";
}

if (!isNaN(Plumbing_27) && !isNaN(PA_2) && PA_2 !== 0 && Boolean(Plumbing_27) && Boolean(PA_2)) {
    fd.field('Plumbing_28').value = (Plumbing_27 / PA_2).toFixed(2);
} else {
    fd.field('Plumbing_28').value = "0";
}

if (!isNaN(Plumbing_33) && !isNaN(Plumbing_32) && Plumbing_32 !== 0 && Boolean(Plumbing_33) && Boolean(Plumbing_32)) {
    fd.field('Plumbing_34').value = (Plumbing_33 / Plumbing_32).toFixed(2);
} else {
    fd.field('Plumbing_34').value = "0";
}

if (!isNaN(Plumbing_35) && !isNaN(PA_2) && PA_2 !== 0 && Boolean(Plumbing_35) && Boolean(PA_2)) {
    fd.field('Plumbing_36').value = (Plumbing_35 / PA_2).toFixed(2);
} else {
    fd.field('Plumbing_36').value = "0";
}






// MEDICAL GASES
if (!isNaN(MG_6)) {
    if (MG_6 <= 6500) {
        fd.field('MG_16').value = "6.2 x 5.5";
    } else if (MG_6 > 6500 && MG_6 < 21400) {
        fd.field('MG_16').value = "7.4 x 6";
    } else if (MG_6 > 21500 && MG_6 < 39500) {
        fd.field('MG_16').value = "8 x 6.4";
    } else {
        fd.field('MG_16').value = 0;
    }
} else {
    fd.field('MG_16').value = 0;
}

if (!isNaN(MG_4)) {
    if (MG_4 < 300) {
        fd.field('MG_17').value = 55;
    } else if (MG_4 > 300 && MG_4 <= 450) {
        fd.field('MG_17').value = 70;
    } else if (MG_4 > 450 && MG_4 <= 1050) {
        fd.field('MG_17').value = 90;
    } else if (MG_4 > 1050 && MG_4 <= 1300) {
        fd.field('MG_17').value = 120;
    } else if (MG_4 > 1300) {
        fd.field('MG_17').value = "Flow is too large for one plant";
    } else {
        fd.field('MG_17').value = 0;
    }
} else {
    fd.field('MG_17').value = 0;
}

if (!isNaN(MG_11)) {
    if (MG_11 >= 1450 && MG_11 < 2270) {
        fd.field('MG_18').value = 50;
    } else if (MG_11 >= 2270 && MG_11 < 4300) {
        fd.field('MG_18').value = 65;
    } else if (MG_11 > 4300 && MG_11 <= 6600) {
        fd.field('MG_18').value = 70;
    } else if (MG_11 > 6600) {
        fd.field('MG_18').value = "flow is too large for combined plant, separate to two plants";
    } else {
        fd.field('MG_18').value = 0;
    }
} else {
    fd.field('MG_18').value = 0;
}

if (!isNaN(MG_14)) {
    if (MG_14 <= 1000) {
        fd.field('MG_19').value = 30;
    } else if (MG_14 > 1000 && MG_14 <= 4000) {
        fd.field('MG_19').value = 55;
    } else if (MG_14 > 4000 && MG_14 < 6600) {
        fd.field('MG_19').value = 70;
    } else if (MG_14 > 6600) {
        fd.field('MG_19').value = "flow is too large, separate to two plants";
    } else {
        fd.field('MG_19').value = 0;
    }
    fd.field('MG_19').disabled = true;
} else {
    fd.field('MG_19').value = 0;
    fd.field('MG_19').disabled = true;
}

if (!isNaN(E111) && !isNaN(E110) && Boolean(E110) && Boolean(E111)) {
    fd.field('MG_4').value = (10 * (E111 || 0)) + (((E110 || 0) - (E111 || 0)) * 0.75) + 1000;
} else {
    fd.field('MG_4').value = 0;
}
fd.field('MG_4').disabled = true;

if (!isNaN(oxygenDemand) && !isNaN(x) && Boolean(oxygenDemand) && Boolean(x)) {
    fd.field('MG_7').value = ((oxygenDemand || 0) / (x || 1)).toFixed(2);
} else {
    fd.field('MG_7').value = 0;
}
fd.field('MG_7').disabled = true;

if (!isNaN(oxygenDemand) && !isNaN(criticalCareAreas) && Boolean(oxygenDemand) && Boolean(criticalCareAreas)) {
    fd.field('MG_8').value = ((oxygenDemand || 0) / (criticalCareAreas || 1)).toFixed(2);
} else {
    fd.field('MG_8').value = 0;
}
fd.field('MG_8').disabled = true;

let airDemandSum = surgicalAirDemand + medicalAirDemand;
fd.field('MG_11').value = (airDemandSum < 3970 ? airDemandSum : 3970);
fd.field('MG_11').disabled = true;

if (!isNaN(medicalAirDemand) && !isNaN(x) && Boolean(x) && Boolean(medicalAirDemand)) {
    fd.field('MG_12').value = ((medicalAirDemand || 0) / (x || 1)).toFixed(2);
} else {
    fd.field('MG_12').value = 0;
}
fd.field('MG_12').disabled = true;

if (!isNaN(surgicalAirDemand) && !isNaN(x) && Boolean(x) && Boolean(surgicalAirDemand)) {
    fd.field('MG_13').value = ((surgicalAirDemand || 0) / (x || 1)).toFixed(2);
} else {
    fd.field('MG_13').value = 0;
}
fd.field('MG_13').disabled = true;

if (!isNaN(vacuumDemand) && !isNaN(x) && Boolean(x) && Boolean(vacuumDemand)) {
    fd.field('MG_15').value = ((vacuumDemand || 0) / (x || 1)).toFixed(2);
} else {
    fd.field('MG_15').value = 0;
}
fd.field('MG_15').disabled = true;


// ELECTRICAL DATA
if (PA_1 !== 0 && !isNaN(ED_1) && !isNaN(PA_1) && Boolean(PA_1) && Boolean(ED_1)) {
    fd.field('ED_2').value = (ED_1 / PA_1).toFixed(2);
} else {
    fd.field('ED_2').value = 0;
}
fd.field('ED_2').disabled = true;

if (PA_1 !== 0 && !isNaN(ED_3) && !isNaN(PA_1)&& Boolean(PA_1) && Boolean(ED_3) ) {
    fd.field('ED_4').value = (ED_3 / PA_1).toFixed(2);
} else {
    fd.field('ED_4').value = 0;
}
fd.field('ED_4').disabled = true;

if (PA_1 !== 0 && !isNaN(ED_5) && !isNaN(PA_1)&& Boolean(PA_1) && Boolean(ED_5)) {
    fd.field('ED_6').value = (ED_5 / PA_1).toFixed(2);
} else {
    fd.field('ED_6').value = 0;
}
fd.field('ED_6').disabled = true;

if (PA_1 !== 0 && !isNaN(ED_7) && !isNaN(PA_1) && Boolean(PA_1) && Boolean(ED_7)) {
    fd.field('ED_8').value = (ED_7 / PA_1).toFixed(2);
} else {
    fd.field('ED_8').value = 0;
}
fd.field('ED_8').disabled = true;

// MECHANICAL CONSTRUCTION COST
if (PA_1 !== 0 && !isNaN(MCC_1) && !isNaN(PA_1)&& Boolean(PA_1) && Boolean(MCC_1)) {
    fd.field('MCC_3').value = (MCC_1 / PA_1).toFixed(2);
} else {
    fd.field('MCC_3').value = 0;
}
fd.field('MCC_3').disabled = true;

if (HVAC_2 !== 0 && !isNaN(MCC_1) && !isNaN(HVAC_2) && Boolean(HVAC_2) && Boolean(MCC_1)) {
    fd.field('MCC_4').value = (MCC_1 / HVAC_2).toFixed(2);
} else {
    fd.field('MCC_4').value = 0;
}
fd.field('MCC_4').disabled = true;

if (MCC_1 !== 0 && !isNaN(MCC_1) && Boolean(MCC_1)) {
    fd.field('MCC_5').value = (MCC_1 / 142).toFixed(2);
} else {
    fd.field('MCC_5').value = 0;
}
fd.field('MCC_5').disabled = true;

if (HVAC_2 !== 0 && !isNaN(MCC_6) && !isNaN(HVAC_2) && Boolean(HVAC_2) && Boolean(MCC_6)) {
    fd.field('MCC_7').value = (MCC_6 / HVAC_2).toFixed(2);
} else {
    fd.field('MCC_7').value = 0;
}
fd.field('MCC_7').disabled = true;

// MECHANICAL DESIGN EFFORT
if (MDE_3 !== 0 && !isNaN(MDE_2) && !isNaN(MDE_3) && Boolean(MDE_3) && Boolean(MDE_2)) {
    fd.field('MDE_5').value = (MDE_2 / MDE_3).toFixed(2);
} else {
    fd.field('MDE_5').value = 0;
}
fd.field('MDE_5').disabled = true;





}
